{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/components/FileUpload.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { uploadCSV } from '@/services/api';\nimport { useCSV } from '@/context/CSVContext';\nimport { ArrowUpTrayIcon, CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\n\ninterface FileUploadProps {\n  onSuccess?: () => void;\n}\n\nexport default function FileUpload({ onSuccess }: FileUploadProps) {\n  const { refreshFiles } = useCSV();\n  const [file, setFile] = useState<File | null>(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0] || null;\n    if (selectedFile) {\n      validateAndSetFile(selectedFile);\n    }\n  };\n\n  const validateAndSetFile = (selectedFile: File) => {\n    setError(null);\n    setSuccess(null);\n    \n    if (!selectedFile.name.endsWith('.csv')) {\n      setError('Only CSV files are allowed');\n      return;\n    }\n    \n    setFile(selectedFile);\n  };\n\n  const handleDragEnter = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  }, []);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isDragging) {\n      setIsDragging(true);\n    }\n  }, [isDragging]);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n    \n    const droppedFile = e.dataTransfer.files?.[0];\n    if (droppedFile) {\n      validateAndSetFile(droppedFile);\n    }\n  }, []);\n\n  const handleUpload = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!file) {\n      setError('Please select a CSV file to upload');\n      return;\n    }\n    \n    try {\n      setUploading(true);\n      setError(null);\n      \n      await uploadCSV(file);\n      \n      setSuccess(`File ${file.name} uploaded successfully!`);\n      setFile(null);\n      \n      // Reset the file input\n      const fileInput = document.getElementById('csv-file') as HTMLInputElement;\n      if (fileInput) {\n        fileInput.value = '';\n      }\n      \n      // Refresh the file list\n      await refreshFiles();\n      \n      // Call onSuccess callback if provided\n      if (onSuccess) {\n        onSuccess();\n      }\n    } catch (error: any) {\n      setError(error.response?.data?.detail || 'Error uploading file. Please try again.');\n      console.error('Upload error:', error);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleUpload} className=\"space-y-4\">\n        <div \n          className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n            isDragging \n              ? 'border-blue-400 bg-blue-50' \n              : file \n                ? 'border-green-300 bg-green-50' \n                : 'border-gray-300 hover:border-gray-400'\n          }`}\n          onDragEnter={handleDragEnter}\n          onDragLeave={handleDragLeave}\n          onDragOver={handleDragOver}\n          onDrop={handleDrop}\n        >\n          <label htmlFor=\"csv-file\" className=\"block cursor-pointer\">\n            {file ? (\n              <>\n                <CheckCircleIcon className=\"h-10 w-10 mx-auto text-green-500 mb-2\" />\n                <span className=\"block font-medium text-green-700 mb-1\">\n                  {file.name}\n                </span>\n                <span className=\"text-xs text-green-600 block\">\n                  {(file.size / 1024).toFixed(2)} KB â€¢ Ready to upload\n                </span>\n              </>\n            ) : (\n              <>\n                <ArrowUpTrayIcon className={`h-10 w-10 mx-auto mb-2 ${isDragging ? 'text-blue-500' : 'text-gray-400'}`} />\n                <span className={`block font-medium mb-1 ${isDragging ? 'text-blue-700' : 'text-gray-700'}`}>\n                  {isDragging ? 'Drop your CSV file here' : 'Click to select or drop a CSV file'}\n                </span>\n                <span className=\"text-xs text-gray-500 block\">\n                  Only CSV files are supported (*.csv)\n                </span>\n              </>\n            )}\n            <input\n              id=\"csv-file\"\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileChange}\n              className=\"hidden\"\n            />\n          </label>\n        </div>\n        \n        {error && (\n          <div className=\"bg-red-50 text-red-600 p-3 rounded-md text-sm flex items-start\">\n            <XCircleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n            <span>{error}</span>\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"bg-green-50 text-green-600 p-3 rounded-md text-sm flex items-start\">\n            <CheckCircleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n            <span>{success}</span>\n          </div>\n        )}\n        \n        <button\n          type=\"submit\"\n          disabled={!file || uploading}\n          className={`w-full py-2 px-4 rounded-md font-medium flex items-center justify-center transition-colors ${\n            !file || uploading\n              ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              : 'bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white'\n          }`}\n        >\n          {uploading ? (\n            <>\n              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Uploading...\n            </>\n          ) : (\n            <>\n              <ArrowUpTrayIcon className=\"h-5 w-5 mr-2\" />\n              Upload CSV\n            </>\n          )}\n        </button>\n      </form>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;AALA;;;;;AAWe,SAAS,WAAW,EAAE,SAAS,EAAmB;;IAC/D,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,SAAM,AAAD;IAC9B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACtD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,mBAAmB,CAAC;QACxB,MAAM,eAAe,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI;QAC5C,IAAI,cAAc;YAChB,mBAAmB;QACrB;IACF;IAEA,MAAM,qBAAqB,CAAC;QAC1B,SAAS;QACT,WAAW;QAEX,IAAI,CAAC,aAAa,IAAI,CAAC,QAAQ,CAAC,SAAS;YACvC,SAAS;YACT;QACF;QAEA,QAAQ;IACV;IAEA,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE,CAAC;YACnC,EAAE,cAAc;YAChB,EAAE,eAAe;YACjB,cAAc;QAChB;kDAAG,EAAE;IAEL,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE,CAAC;YACnC,EAAE,cAAc;YAChB,EAAE,eAAe;YACjB,cAAc;QAChB;kDAAG,EAAE;IAEL,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE,CAAC;YAClC,EAAE,cAAc;YAChB,EAAE,eAAe;YACjB,IAAI,CAAC,YAAY;gBACf,cAAc;YAChB;QACF;iDAAG;QAAC;KAAW;IAEf,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;8CAAE,CAAC;YAC9B,EAAE,cAAc;YAChB,EAAE,eAAe;YACjB,cAAc;YAEd,MAAM,cAAc,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,EAAE;YAC7C,IAAI,aAAa;gBACf,mBAAmB;YACrB;QACF;6CAAG,EAAE;IAEL,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI,CAAC,MAAM;YACT,SAAS;YACT;QACF;QAEA,IAAI;YACF,aAAa;YACb,SAAS;YAET,MAAM,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD,EAAE;YAEhB,WAAW,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,uBAAuB,CAAC;YACrD,QAAQ;YAER,uBAAuB;YACvB,MAAM,YAAY,SAAS,cAAc,CAAC;YAC1C,IAAI,WAAW;gBACb,UAAU,KAAK,GAAG;YACpB;YAEA,wBAAwB;YACxB,MAAM;YAEN,sCAAsC;YACtC,IAAI,WAAW;gBACb;YACF;QACF,EAAE,OAAO,OAAY;YACnB,SAAS,MAAM,QAAQ,EAAE,MAAM,UAAU;YACzC,QAAQ,KAAK,CAAC,iBAAiB;QACjC,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6LAAC;kBACC,cAAA,6LAAC;YAAK,UAAU;YAAc,WAAU;;8BACtC,6LAAC;oBACC,WAAW,CAAC,oEAAoE,EAC9E,aACI,+BACA,OACE,iCACA,yCACN;oBACF,aAAa;oBACb,aAAa;oBACb,YAAY;oBACZ,QAAQ;8BAER,cAAA,6LAAC;wBAAM,SAAQ;wBAAW,WAAU;;4BACjC,qBACC;;kDACE,6LAAC,gOAAA,CAAA,kBAAe;wCAAC,WAAU;;;;;;kDAC3B,6LAAC;wCAAK,WAAU;kDACb,KAAK,IAAI;;;;;;kDAEZ,6LAAC;wCAAK,WAAU;;4CACb,CAAC,KAAK,IAAI,GAAG,IAAI,EAAE,OAAO,CAAC;4CAAG;;;;;;;;6DAInC;;kDACE,6LAAC,gOAAA,CAAA,kBAAe;wCAAC,WAAW,CAAC,uBAAuB,EAAE,aAAa,kBAAkB,iBAAiB;;;;;;kDACtG,6LAAC;wCAAK,WAAW,CAAC,uBAAuB,EAAE,aAAa,kBAAkB,iBAAiB;kDACxF,aAAa,4BAA4B;;;;;;kDAE5C,6LAAC;wCAAK,WAAU;kDAA8B;;;;;;;;0CAKlD,6LAAC;gCACC,IAAG;gCACH,MAAK;gCACL,QAAO;gCACP,UAAU;gCACV,WAAU;;;;;;;;;;;;;;;;;gBAKf,uBACC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,wNAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;sCACvB,6LAAC;sCAAM;;;;;;;;;;;;gBAIV,yBACC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,gOAAA,CAAA,kBAAe;4BAAC,WAAU;;;;;;sCAC3B,6LAAC;sCAAM;;;;;;;;;;;;8BAIX,6LAAC;oBACC,MAAK;oBACL,UAAU,CAAC,QAAQ;oBACnB,WAAW,CAAC,2FAA2F,EACrG,CAAC,QAAQ,YACL,iDACA,+FACJ;8BAED,0BACC;;0CACE,6LAAC;gCAAI,WAAU;gCAA6C,OAAM;gCAA6B,MAAK;gCAAO,SAAQ;;kDACjH,6LAAC;wCAAO,WAAU;wCAAa,IAAG;wCAAK,IAAG;wCAAK,GAAE;wCAAK,QAAO;wCAAe,aAAY;;;;;;kDACxF,6LAAC;wCAAK,WAAU;wCAAa,MAAK;wCAAe,GAAE;;;;;;;;;;;;4BAC/C;;qDAIR;;0CACE,6LAAC,gOAAA,CAAA,kBAAe;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;;AAQ1D;GAzLwB;;QACG,gIAAA,CAAA,SAAM;;;KADT","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport FileUpload from '@/components/FileUpload';\nimport { useCSV } from '@/context/CSVContext';\nimport DynamicTable, { ColumnDefinition } from '@/components/DynamicTable';\nimport { \n  ChartBarIcon, \n  UserCircleIcon,\n  HomeIcon,\n  ArrowLeftOnRectangleIcon,\n  TableCellsIcon,\n  DocumentTextIcon,\n  ArrowTopRightOnSquareIcon,\n  ClockIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  PlusIcon,\n  Bars3Icon,\n  XMarkIcon,\n  ChartPieIcon,\n  DocumentChartBarIcon,\n  Cog6ToothIcon,\n  QuestionMarkCircleIcon,\n  ArrowTrendingUpIcon,\n  PresentationChartLineIcon\n} from '@heroicons/react/24/outline';\n\nexport default function Dashboard() {\n  const { files, loading, error, selectFile } = useCSV();\n  const router = useRouter();\n  const [userName, setUserName] = useState<string>('User');\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedView, setSelectedView] = useState<'grid' | 'table'>('table');\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [activeNavItem, setActiveNavItem] = useState('csv-files');\n\n  // Check if user is logged in\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\n    if (!isLoggedIn) {\n      router.push('/login');\n    }\n    \n    // For demo: set a random user name \n    const names = ['Alex', 'Jordan', 'Taylor', 'Morgan', 'Casey'];\n    setUserName(names[Math.floor(Math.random() * names.length)]);\n  }, [router]);\n\n  const handleLogout = () => {\n    localStorage.removeItem('isLoggedIn');\n    router.push('/');\n  };\n\n  const navigateToCSVDetail = (fileId: string) => {\n    selectFile(fileId);\n    router.push(`/csv/${fileId}`);\n  };\n\n  const formatDate = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    } catch (e) {\n      return dateString;\n    }\n  };\n\n  // Format file size in a human-readable format (KB, MB, etc.)\n  const formatFileSize = (size: string) => {\n    // If size is already formatted, return it\n    if (size.includes('KB') || size.includes('MB') || size.includes('GB')) {\n      return size;\n    }\n    \n    // Otherwise, try to parse it and format\n    try {\n      const bytes = parseInt(size);\n      if (isNaN(bytes)) return size;\n      \n      if (bytes < 1024) return `${bytes} B`;\n      if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(1)} KB`;\n      if (bytes < 1024 * 1024 * 1024) return `${(bytes / (1024 * 1024)).toFixed(1)} MB`;\n      return `${(bytes / (1024 * 1024 * 1024)).toFixed(1)} GB`;\n    } catch (e) {\n      return size;\n    }\n  };\n\n  // Define table columns for the CSV files\n  const fileColumns: ColumnDefinition<any>[] = [\n    {\n      id: 'filename',\n      header: 'File Name',\n      accessor: (file) => (\n        <div className=\"flex items-center\">\n          <DocumentTextIcon className=\"h-5 w-5 text-gray-400 mr-2 flex-shrink-0\" />\n          <span className=\"font-medium text-gray-900\">{file.filename}</span>\n        </div>\n      ),\n      sortable: true,\n      minWidth: 200,\n    },\n    {\n      id: 'status',\n      header: 'Status',\n      accessor: (file) => (\n        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n          <CheckCircleIcon className=\"h-4 w-4 mr-1\" />\n          Ready\n        </span>\n      ),\n      width: 120,\n    },\n    {\n      id: 'row_count',\n      header: 'Rows',\n      accessor: (file) => file.row_count.toLocaleString(),\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'column_count',\n      header: 'Columns',\n      accessor: (file) => file.column_count,\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'size',\n      header: 'Size',\n      accessor: (file) => formatFileSize(file.size),\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'upload_time',\n      header: 'Upload Date',\n      accessor: (file) => (\n        <div className=\"flex items-center\">\n          <ClockIcon className=\"h-4 w-4 mr-1 text-gray-400\" />\n          <span>{formatDate(file.upload_time)}</span>\n        </div>\n      ),\n      sortable: true,\n      width: 180,\n    },\n    {\n      id: 'actions',\n      header: 'Actions',\n      accessor: (file) => (\n        <button\n          onClick={(e) => {\n            e.stopPropagation();\n            navigateToCSVDetail(file.file_id);\n          }}\n          className=\"text-blue-600 hover:text-blue-900 flex items-center\"\n        >\n          View\n          <ArrowTopRightOnSquareIcon className=\"h-4 w-4 ml-1\" />\n        </button>\n      ),\n      width: 100,\n    },\n  ];\n\n  // Navigation items for the sidebar\n  const navigationItems = [\n    { id: 'dashboard', name: 'Dashboard', icon: HomeIcon, coming: false },\n    { id: 'csv-files', name: 'CSV Files', icon: DocumentTextIcon, coming: false },\n    { id: 'visualizations', name: 'Visualizations', icon: ChartPieIcon, coming: true },\n    { id: 'reports', name: 'Reports', icon: DocumentChartBarIcon, coming: true },\n    { id: 'insights', name: 'Insights', icon: ArrowTrendingUpIcon, coming: true },\n    { id: 'trends', name: 'Trend Analysis', icon: PresentationChartLineIcon, coming: true },\n  ];\n\n  const secondaryNavigation = [\n    { id: 'settings', name: 'Settings', icon: Cog6ToothIcon },\n    { id: 'help', name: 'Help & Support', icon: QuestionMarkCircleIcon },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* Sidebar for larger screens */}\n      <div className={`${sidebarOpen ? 'lg:block' : 'lg:hidden'} hidden lg:w-64 bg-white border-r border-gray-200 fixed inset-y-0 z-20`}>\n        <div className=\"h-full flex flex-col\">\n          <div className=\"flex items-center justify-between h-16 flex-shrink-0 px-4 border-b border-gray-200\">\n            <div className=\"flex items-center\">\n              <ChartBarIcon className=\"h-8 w-8 text-blue-600\" />\n              <h1 className=\"ml-2 text-lg font-bold text-gray-900\">CSV Analytics</h1>\n            </div>\n            <button \n              onClick={() => setSidebarOpen(false)}\n              className=\"lg:hidden text-gray-500 hover:text-gray-600\"\n            >\n              <XMarkIcon className=\"h-6 w-6\" />\n            </button>\n          </div>\n          \n          <div className=\"flex-1 flex flex-col overflow-y-auto pt-5 pb-4\">\n            <nav className=\"mt-1 flex-1 px-2 space-y-1\">\n              {navigationItems.map((item) => (\n                <button\n                  key={item.id}\n                  onClick={() => setActiveNavItem(item.id)}\n                  className={`${\n                    activeNavItem === item.id \n                      ? 'bg-blue-50 border-l-4 border-blue-600 text-blue-600' \n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  } group flex items-center px-3 py-2 text-sm font-medium rounded-md w-full relative`}\n                  disabled={item.coming}\n                >\n                  <item.icon \n                    className={`${\n                      activeNavItem === item.id ? 'text-blue-500' : 'text-gray-400 group-hover:text-gray-500'\n                    } mr-3 flex-shrink-0 h-5 w-5`} \n                  />\n                  {item.name}\n                  {item.coming && (\n                    <span className=\"ml-auto inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-500\">\n                      Soon\n                    </span>\n                  )}\n                </button>\n              ))}\n            </nav>\n            \n            <div className=\"border-t border-gray-200 pt-4 mt-4\">\n              <nav className=\"px-2 space-y-1\">\n                {secondaryNavigation.map((item) => (\n                  <button\n                    key={item.id}\n                    onClick={() => setActiveNavItem(item.id)}\n                    className={`${\n                      activeNavItem === item.id \n                        ? 'bg-blue-50 border-l-4 border-blue-600 text-blue-600' \n                        : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                    } group flex items-center px-3 py-2 text-sm font-medium rounded-md w-full`}\n                  >\n                    <item.icon \n                      className={`${\n                        activeNavItem === item.id ? 'text-blue-500' : 'text-gray-400 group-hover:text-gray-500'\n                      } mr-3 flex-shrink-0 h-5 w-5`} \n                    />\n                    {item.name}\n                  </button>\n                ))}\n              </nav>\n            </div>\n          </div>\n          \n          <div className=\"px-2 mb-2\">\n            <div className=\"flex items-center p-2 rounded-lg bg-gray-50\">\n              <UserCircleIcon className=\"h-8 w-8 text-gray-400\" />\n              <div className=\"ml-2 flex-1 min-w-0\">\n                <p className=\"text-sm font-medium text-gray-900 truncate\">{userName}</p>\n                <button\n                  onClick={handleLogout}\n                  className=\"text-xs text-gray-500 hover:text-gray-700 flex items-center mt-0.5\"\n                >\n                  <ArrowLeftOnRectangleIcon className=\"h-3 w-3 mr-1\" />\n                  Sign out\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Mobile sidebar */}\n      {sidebarOpen && (\n        <div className=\"lg:hidden fixed inset-0 flex z-40\">\n          <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" onClick={() => setSidebarOpen(false)}></div>\n          <div className=\"relative flex-1 flex flex-col max-w-xs w-full bg-white\">\n            <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n              <button\n                onClick={() => setSidebarOpen(false)}\n                className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n              >\n                <span className=\"sr-only\">Close sidebar</span>\n                <XMarkIcon className=\"h-6 w-6 text-white\" />\n              </button>\n            </div>\n            \n            <div className=\"flex-1 h-0 pt-5 pb-4 overflow-y-auto\">\n              <div className=\"flex-shrink-0 flex items-center px-4\">\n                <ChartBarIcon className=\"h-8 w-8 text-blue-600\" />\n                <h1 className=\"ml-2 text-lg font-bold text-gray-900\">CSV Analytics</h1>\n              </div>\n              <nav className=\"mt-5 px-2 space-y-1\">\n                {navigationItems.map((item) => (\n                  <button\n                    key={item.id}\n                    onClick={() => {\n                      setActiveNavItem(item.id);\n                      setSidebarOpen(false);\n                    }}\n                    className={`${\n                      activeNavItem === item.id \n                        ? 'bg-blue-50 border-l-4 border-blue-600 text-blue-600' \n                        : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                    } group flex items-center px-3 py-2 text-base font-medium rounded-md w-full relative`}\n                    disabled={item.coming}\n                  >\n                    <item.icon \n                      className={`${\n                        activeNavItem === item.id ? 'text-blue-500' : 'text-gray-400 group-hover:text-gray-500'\n                      } mr-3 flex-shrink-0 h-6 w-6`} \n                    />\n                    {item.name}\n                    {item.coming && (\n                      <span className=\"ml-auto inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-500\">\n                        Soon\n                      </span>\n                    )}\n                  </button>\n                ))}\n              </nav>\n            </div>\n            \n            <div className=\"border-t border-gray-200 pt-4\">\n              <nav className=\"px-2 space-y-1\">\n                {secondaryNavigation.map((item) => (\n                  <button\n                    key={item.id}\n                    onClick={() => {\n                      setActiveNavItem(item.id);\n                      setSidebarOpen(false);\n                    }}\n                    className={`${\n                      activeNavItem === item.id \n                        ? 'bg-blue-50 border-l-4 border-blue-600 text-blue-600' \n                        : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                    } group flex items-center px-3 py-2 text-base font-medium rounded-md w-full`}\n                  >\n                    <item.icon \n                      className={`${\n                        activeNavItem === item.id ? 'text-blue-500' : 'text-gray-400 group-hover:text-gray-500'\n                      } mr-3 flex-shrink-0 h-6 w-6`} \n                    />\n                    {item.name}\n                  </button>\n                ))}\n              </nav>\n              \n              <div className=\"px-2 mt-3 mb-3\">\n                <div className=\"flex items-center p-3 rounded-lg bg-gray-50\">\n                  <UserCircleIcon className=\"h-10 w-10 text-gray-400\" />\n                  <div className=\"ml-3\">\n                    <p className=\"text-base font-medium text-gray-900\">{userName}</p>\n                    <button\n                      onClick={handleLogout}\n                      className=\"text-sm text-gray-500 hover:text-gray-700 flex items-center mt-1\"\n                    >\n                      <ArrowLeftOnRectangleIcon className=\"h-4 w-4 mr-1\" />\n                      Sign out\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className={`flex flex-col flex-1 ${sidebarOpen ? 'lg:pl-64' : ''}`}>\n        <header className=\"bg-white shadow-sm sticky top-0 z-10\">\n          <div className=\"px-4 sm:px-6 lg:px-8 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <button\n                  onClick={() => setSidebarOpen(!sidebarOpen)}\n                  className=\"p-1 text-gray-500 focus:outline-none\"\n                >\n                  <Bars3Icon className=\"h-6 w-6\" />\n                </button>\n                \n                <div className=\"ml-3 lg:hidden flex items-center\">\n                  <ChartBarIcon className=\"h-6 w-6 text-blue-600\" />\n                  <h1 className=\"ml-1 text-lg font-bold text-gray-900\">CSV Analytics</h1>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => setShowUploadModal(true)}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700\"\n                >\n                  <PlusIcon className=\"h-4 w-4 mr-1\" />\n                  Upload CSV\n                </button>\n                \n                <div className=\"relative lg:hidden\">\n                  <button \n                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                    className=\"flex items-center text-gray-700 hover:text-gray-900 focus:outline-none\"\n                  >\n                    <UserCircleIcon className=\"h-8 w-8 text-gray-400\" />\n                    <svg className=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </button>\n                  \n                  {isMenuOpen && (\n                    <div className=\"absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\n                      <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                        <a href=\"/\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\">\n                          <HomeIcon className=\"h-4 w-4 mr-2\" />\n                          Home\n                        </a>\n                        <button \n                          onClick={handleLogout}\n                          className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"\n                        >\n                          <ArrowLeftOnRectangleIcon className=\"h-4 w-4 mr-2\" />\n                          Sign out\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        <main className=\"flex-1\">\n          <div className=\"py-8 px-4 sm:px-6 lg:px-8\">\n            <div className=\"bg-white rounded-lg shadow-sm overflow-hidden border border-gray-100\">\n              <div className=\"p-5 border-b border-gray-100\">\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"flex items-center\">\n                    <DocumentTextIcon className=\"h-5 w-5 text-gray-500 mr-2\" />\n                    <h2 className=\"text-lg font-medium\">CSV File Management</h2>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => setSelectedView('grid')}\n                      className={`inline-flex items-center p-1.5 border ${\n                        selectedView === 'grid' \n                          ? 'bg-blue-50 border-blue-300 text-blue-600' \n                          : 'border-gray-300 text-gray-500 hover:bg-gray-50'\n                      } rounded-md`}\n                      title=\"Grid view\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n                      </svg>\n                    </button>\n                    <button\n                      onClick={() => setSelectedView('table')}\n                      className={`inline-flex items-center p-1.5 border ${\n                        selectedView === 'table' \n                          ? 'bg-blue-50 border-blue-300 text-blue-600' \n                          : 'border-gray-300 text-gray-500 hover:bg-gray-50'\n                      } rounded-md`}\n                      title=\"Table view\"\n                    >\n                      <TableCellsIcon className=\"h-5 w-5\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"p-5\">\n                {loading ? (\n                  <div className=\"flex justify-center items-center h-40\">\n                    <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-blue-500\"></div>\n                  </div>\n                ) : error ? (\n                  <div className=\"bg-red-50 border border-red-100 text-red-600 p-4 rounded-md flex items-center\">\n                    <ExclamationTriangleIcon className=\"h-5 w-5 mr-2\" />\n                    <p>Error loading files: {error}</p>\n                  </div>\n                ) : files.length === 0 ? (\n                  <div className=\"py-10 text-center\">\n                    <DocumentTextIcon className=\"mx-auto h-12 w-12 text-gray-300\" />\n                    <h3 className=\"mt-2 text-sm font-semibold text-gray-900\">No CSV files</h3>\n                    <p className=\"mt-1 text-sm text-gray-500\">Get started by uploading your first CSV file.</p>\n                    <div className=\"mt-6\">\n                      <button\n                        onClick={() => setShowUploadModal(true)}\n                        className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700\"\n                      >\n                        <PlusIcon className=\"h-4 w-4 mr-1\" />\n                        Upload CSV\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    {selectedView === 'table' ? (\n                      <DynamicTable\n                        data={files}\n                        columns={fileColumns}\n                        onRowClick={(file) => navigateToCSVDetail(file.file_id)}\n                        isLoading={loading}\n                        emptyMessage={\n                          <div className=\"py-10 text-center\">\n                            <DocumentTextIcon className=\"mx-auto h-12 w-12 text-gray-300\" />\n                            <h3 className=\"mt-2 text-sm font-semibold text-gray-900\">No CSV files</h3>\n                            <p className=\"mt-1 text-sm text-gray-500\">Get started by uploading your first CSV file.</p>\n                            <div className=\"mt-6\">\n                              <button\n                                onClick={() => setShowUploadModal(true)}\n                                className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700\"\n                              >\n                                <PlusIcon className=\"h-4 w-4 mr-1\" />\n                                Upload CSV\n                              </button>\n                            </div>\n                          </div>\n                        }\n                        initialSortConfig={{ key: 'upload_time', direction: 'desc' }}\n                      />\n                    ) : (\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                        {files.map((file) => (\n                          <div \n                            key={file.file_id} \n                            className=\"border border-gray-200 rounded-lg overflow-hidden hover:shadow-md transition-shadow\"\n                          >\n                            <div className=\"bg-gray-50 px-4 py-3 border-b border-gray-200\">\n                              <div className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center overflow-hidden\">\n                                  <DocumentTextIcon className=\"h-5 w-5 text-gray-400 flex-shrink-0 mr-2\" />\n                                  <div className=\"truncate text-sm font-medium text-gray-900\">{file.filename}</div>\n                                </div>\n                                <span className=\"flex-shrink-0 px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                                  <CheckCircleIcon className=\"h-3 w-3 mr-1\" />\n                                  Ready\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"px-4 py-3\">\n                              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                                <div>\n                                  <p className=\"text-gray-500\">Rows</p>\n                                  <p className=\"font-medium\">{file.row_count.toLocaleString()}</p>\n                                </div>\n                                <div>\n                                  <p className=\"text-gray-500\">Columns</p>\n                                  <p className=\"font-medium\">{file.column_count}</p>\n                                </div>\n                                <div>\n                                  <p className=\"text-gray-500\">Size</p>\n                                  <p className=\"font-medium\">{file.size}</p>\n                                </div>\n                                <div>\n                                  <p className=\"text-gray-500\">Upload Date</p>\n                                  <p className=\"font-medium text-xs\">{formatDate(file.upload_time)}</p>\n                                </div>\n                              </div>\n                              <div className=\"mt-4 flex justify-end\">\n                                <button\n                                  onClick={() => navigateToCSVDetail(file.file_id)}\n                                  className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm leading-4 font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200\"\n                                >\n                                  View Details\n                                  <ArrowTopRightOnSquareIcon className=\"ml-1 h-4 w-4\" />\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n\n        {/* Upload Modal */}\n        {showUploadModal && (\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Upload CSV File</h3>\n                <button \n                  onClick={() => setShowUploadModal(false)}\n                  className=\"text-gray-400 hover:text-gray-500\"\n                >\n                  <span className=\"sr-only\">Close</span>\n                  <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              <FileUpload onSuccess={() => setShowUploadModal(false)} />\n            </div>\n          </div>\n        )}\n\n        <footer className=\"bg-white border-t border-gray-200\">\n          <div className=\"py-4 px-4 sm:px-6 lg:px-8\">\n            <p className=\"text-center text-gray-500 text-sm\">\n              CSV Analytics Dashboard â€¢ Built with Next.js and FastAPI\n            </p>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}