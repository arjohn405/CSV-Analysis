{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/components/FileUpload.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { uploadCSV } from '@/services/api';\nimport { useCSV } from '@/context/CSVContext';\nimport { ArrowUpTrayIcon, CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\n\nexport default function FileUpload() {\n  const { refreshFiles } = useCSV();\n  const [file, setFile] = useState<File | null>(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0] || null;\n    if (selectedFile) {\n      validateAndSetFile(selectedFile);\n    }\n  };\n\n  const validateAndSetFile = (selectedFile: File) => {\n    setError(null);\n    setSuccess(null);\n    \n    if (!selectedFile.name.endsWith('.csv')) {\n      setError('Only CSV files are allowed');\n      return;\n    }\n    \n    setFile(selectedFile);\n  };\n\n  const handleDragEnter = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  }, []);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isDragging) {\n      setIsDragging(true);\n    }\n  }, [isDragging]);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n    \n    const droppedFile = e.dataTransfer.files?.[0];\n    if (droppedFile) {\n      validateAndSetFile(droppedFile);\n    }\n  }, []);\n\n  const handleUpload = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!file) {\n      setError('Please select a CSV file to upload');\n      return;\n    }\n    \n    try {\n      setUploading(true);\n      setError(null);\n      \n      await uploadCSV(file);\n      \n      setSuccess(`File ${file.name} uploaded successfully!`);\n      setFile(null);\n      \n      // Reset the file input\n      const fileInput = document.getElementById('csv-file') as HTMLInputElement;\n      if (fileInput) {\n        fileInput.value = '';\n      }\n      \n      // Refresh the file list\n      await refreshFiles();\n    } catch (error: any) {\n      setError(error.response?.data?.detail || 'Error uploading file. Please try again.');\n      console.error('Upload error:', error);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleUpload} className=\"space-y-4\">\n        <div \n          className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n            isDragging \n              ? 'border-blue-400 bg-blue-50' \n              : file \n                ? 'border-green-300 bg-green-50' \n                : 'border-gray-300 hover:border-gray-400'\n          }`}\n          onDragEnter={handleDragEnter}\n          onDragLeave={handleDragLeave}\n          onDragOver={handleDragOver}\n          onDrop={handleDrop}\n        >\n          <label htmlFor=\"csv-file\" className=\"block cursor-pointer\">\n            {file ? (\n              <>\n                <CheckCircleIcon className=\"h-10 w-10 mx-auto text-green-500 mb-2\" />\n                <span className=\"block font-medium text-green-700 mb-1\">\n                  {file.name}\n                </span>\n                <span className=\"text-xs text-green-600 block\">\n                  {(file.size / 1024).toFixed(2)} KB â€¢ Ready to upload\n                </span>\n              </>\n            ) : (\n              <>\n                <ArrowUpTrayIcon className={`h-10 w-10 mx-auto mb-2 ${isDragging ? 'text-blue-500' : 'text-gray-400'}`} />\n                <span className={`block font-medium mb-1 ${isDragging ? 'text-blue-700' : 'text-gray-700'}`}>\n                  {isDragging ? 'Drop your CSV file here' : 'Click to select or drop a CSV file'}\n                </span>\n                <span className=\"text-xs text-gray-500 block\">\n                  Only CSV files are supported (*.csv)\n                </span>\n              </>\n            )}\n            <input\n              id=\"csv-file\"\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileChange}\n              className=\"hidden\"\n            />\n          </label>\n        </div>\n        \n        {error && (\n          <div className=\"bg-red-50 text-red-600 p-3 rounded-md text-sm flex items-start\">\n            <XCircleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n            <span>{error}</span>\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"bg-green-50 text-green-600 p-3 rounded-md text-sm flex items-start\">\n            <CheckCircleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n            <span>{success}</span>\n          </div>\n        )}\n        \n        <button\n          type=\"submit\"\n          disabled={!file || uploading}\n          className={`w-full py-2 px-4 rounded-md font-medium flex items-center justify-center transition-colors ${\n            !file || uploading\n              ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              : 'bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white'\n          }`}\n        >\n          {uploading ? (\n            <>\n              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Uploading...\n            </>\n          ) : (\n            <>\n              <ArrowUpTrayIcon className=\"h-5 w-5 mr-2\" />\n              Upload CSV\n            </>\n          )}\n        </button>\n      </form>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/components/FileList.tsx"],"sourcesContent":["'use client';\n\nimport { useCSV } from '@/context/CSVContext';\nimport { \n  DocumentTextIcon, \n  ClockIcon, \n  ChartBarIcon, \n  CheckCircleIcon,\n  ArrowRightIcon,\n  DocumentMagnifyingGlassIcon\n} from '@heroicons/react/24/outline';\nimport { useCallback } from 'react';\n\nexport default function FileList() {\n  const { files, loading, error, selectFile, selectedFileId } = useCSV();\n\n  const handleSelectFile = useCallback((fileId: string) => {\n    selectFile(fileId);\n    // Scroll to top on mobile when selecting a file\n    if (window.innerWidth < 1024) {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  }, [selectFile]);\n\n  if (loading) {\n    return (\n      <div className=\"animate-pulse\">\n        <div className=\"space-y-3 px-4 py-4\">\n          <div className=\"h-12 bg-gray-100 rounded w-full\"></div>\n          <div className=\"h-12 bg-gray-100 rounded w-full\"></div>\n          <div className=\"h-12 bg-gray-100 rounded w-full\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-4\">\n        <div className=\"bg-red-50 text-red-600 p-4 rounded-md text-sm\">\n          {error}\n        </div>\n      </div>\n    );\n  }\n\n  if (files.length === 0) {\n    return (\n      <div className=\"text-center py-10 px-4\">\n        <DocumentMagnifyingGlassIcon className=\"h-12 w-12 mx-auto text-gray-300 mb-3\" />\n        <p className=\"text-gray-500 mb-1\">No CSV files yet</p>\n        <p className=\"text-xs text-gray-400\">Upload a file to get started</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"divide-y divide-gray-100\">\n      {files.map((file) => (\n        <div \n          key={file.file_id} \n          className={`p-4 hover:bg-gray-50 transition-colors ${selectedFileId === file.file_id ? 'bg-blue-50' : ''}`}\n        >\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center\">\n                <DocumentTextIcon className={`h-5 w-5 mr-2 ${selectedFileId === file.file_id ? 'text-blue-500' : 'text-gray-400'}`} />\n                <h3 className=\"text-sm font-medium text-gray-900 truncate\">{file.filename}</h3>\n                {selectedFileId === file.file_id && (\n                  <span className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                    <CheckCircleIcon className=\"h-3 w-3 mr-1\" />\n                    Active\n                  </span>\n                )}\n              </div>\n              \n              <div className=\"mt-2 text-xs text-gray-500 space-y-1\">\n                <div className=\"flex items-center\">\n                  <ClockIcon className=\"h-3 w-3 mr-1\" />\n                  {file.upload_time}\n                </div>\n                <div className=\"flex items-center\">\n                  <ChartBarIcon className=\"h-3 w-3 mr-1\" />\n                  {file.row_count.toLocaleString()} rows Ã— {file.column_count} columns\n                </div>\n                <div>\n                  File size: {file.size}\n                </div>\n              </div>\n            </div>\n            \n            <button\n              onClick={() => handleSelectFile(file.file_id)}\n              className={`ml-4 flex-shrink-0 inline-flex items-center px-3 py-1 rounded-md text-sm font-medium transition-colors ${\n                selectedFileId === file.file_id\n                  ? 'bg-blue-100 text-blue-700'\n                  : 'bg-white border border-gray-200 text-gray-700 hover:bg-gray-50 hover:text-blue-600 hover:border-blue-300'\n              }`}\n            >\n              {selectedFileId === file.file_id ? 'Selected' : (\n                <>\n                  Analyze\n                  <ArrowRightIcon className=\"ml-1 h-3 w-3\" />\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAXA;;;;AAae,SAAS;;IACtB,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,SAAM,AAAD;IAEnE,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE,CAAC;YACpC,WAAW;YACX,gDAAgD;YAChD,IAAI,OAAO,UAAU,GAAG,MAAM;gBAC5B,OAAO,QAAQ,CAAC;oBAAE,KAAK;oBAAG,UAAU;gBAAS;YAC/C;QACF;iDAAG;QAAC;KAAW;IAEf,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;IAIvB;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;IAIT;IAEA,IAAI,MAAM,MAAM,KAAK,GAAG;QACtB,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,wPAAA,CAAA,8BAA2B;oBAAC,WAAU;;;;;;8BACvC,6LAAC;oBAAE,WAAU;8BAAqB;;;;;;8BAClC,6LAAC;oBAAE,WAAU;8BAAwB;;;;;;;;;;;;IAG3C;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC;gBAEC,WAAW,CAAC,uCAAuC,EAAE,mBAAmB,KAAK,OAAO,GAAG,eAAe,IAAI;0BAE1G,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,kOAAA,CAAA,mBAAgB;4CAAC,WAAW,CAAC,aAAa,EAAE,mBAAmB,KAAK,OAAO,GAAG,kBAAkB,iBAAiB;;;;;;sDAClH,6LAAC;4CAAG,WAAU;sDAA8C,KAAK,QAAQ;;;;;;wCACxE,mBAAmB,KAAK,OAAO,kBAC9B,6LAAC;4CAAK,WAAU;;8DACd,6LAAC,gOAAA,CAAA,kBAAe;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;;8CAMlD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,oNAAA,CAAA,YAAS;oDAAC,WAAU;;;;;;gDACpB,KAAK,WAAW;;;;;;;sDAEnB,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,0NAAA,CAAA,eAAY;oDAAC,WAAU;;;;;;gDACvB,KAAK,SAAS,CAAC,cAAc;gDAAG;gDAAS,KAAK,YAAY;gDAAC;;;;;;;sDAE9D,6LAAC;;gDAAI;gDACS,KAAK,IAAI;;;;;;;;;;;;;;;;;;;sCAK3B,6LAAC;4BACC,SAAS,IAAM,iBAAiB,KAAK,OAAO;4BAC5C,WAAW,CAAC,uGAAuG,EACjH,mBAAmB,KAAK,OAAO,GAC3B,8BACA,4GACJ;sCAED,mBAAmB,KAAK,OAAO,GAAG,2BACjC;;oCAAE;kDAEA,6LAAC,8NAAA,CAAA,iBAAc;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;eA1C7B,KAAK,OAAO;;;;;;;;;;AAmD3B;GAlGwB;;QACwC,gIAAA,CAAA,SAAM;;;KAD9C","debugId":null}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/components/DataPreview.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { getFileMetadata, getFileStats, CSVMetadata, FileStats } from '@/services/api';\nimport { useCSV } from '@/context/CSVContext';\nimport { \n  TableCellsIcon, \n  InformationCircleIcon,\n  ExclamationTriangleIcon,\n  ArrowsUpDownIcon\n} from '@heroicons/react/24/outline';\n\nexport default function DataPreview() {\n  const { selectedFileId } = useCSV();\n  const [metadata, setMetadata] = useState<CSVMetadata | null>(null);\n  const [stats, setStats] = useState<FileStats | null>(null);\n  const [viewMode, setViewMode] = useState<'preview' | 'stats'>('preview');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (selectedFileId) {\n      loadMetadata(selectedFileId);\n      loadStats(selectedFileId);\n    } else {\n      setMetadata(null);\n      setStats(null);\n    }\n  }, [selectedFileId]);\n\n  const loadMetadata = async (fileId: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await getFileMetadata(fileId);\n      setMetadata(data);\n    } catch (error: any) {\n      console.error('Error loading metadata:', error);\n      setError(error.response?.data?.detail || 'Failed to load file data.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadStats = async (fileId: string) => {\n    try {\n      const data = await getFileStats(fileId);\n      setStats(data);\n    } catch (error: any) {\n      console.error('Error loading stats:', error);\n      // We don't set general error here as the preview might still work\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"animate-pulse space-y-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"h-8 bg-gray-100 rounded w-1/3\"></div>\n          <div className=\"h-8 bg-gray-100 rounded w-32\"></div>\n        </div>\n        <div className=\"h-80 bg-gray-100 rounded w-full\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-100 text-red-600 p-4 rounded-md flex items-start\">\n        <ExclamationTriangleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n        <div>\n          <h3 className=\"font-medium\">Error loading data</h3>\n          <p className=\"text-sm mt-1\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!metadata) {\n    return null;\n  }\n\n  const hasStats = stats && stats.columns && stats.columns.length > 0;\n  const hasMissingValues = hasStats && stats.columns.some(col => col.missing > 0);\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h2 className=\"text-lg font-medium text-gray-900\">\n            {viewMode === 'preview' ? 'Data Preview' : 'Column Statistics'}\n          </h2>\n          <p className=\"text-sm text-gray-500 mt-1\">\n            {metadata.filename} â€¢ {metadata.row_count.toLocaleString()} rows Ã— {metadata.column_count} columns\n          </p>\n        </div>\n        \n        <div className=\"bg-gray-100 rounded-lg p-0.5 flex text-sm\">\n          <button\n            className={`px-3 py-1.5 rounded-md ${viewMode === 'preview' ? 'bg-white shadow-sm text-gray-800' : 'text-gray-600'}`}\n            onClick={() => setViewMode('preview')}\n          >\n            <span className=\"flex items-center\">\n              <TableCellsIcon className=\"h-4 w-4 mr-1.5\" />\n              Preview\n            </span>\n          </button>\n          <button\n            className={`px-3 py-1.5 rounded-md ${viewMode === 'stats' ? 'bg-white shadow-sm text-gray-800' : 'text-gray-600'}`}\n            onClick={() => setViewMode('stats')}\n          >\n            <span className=\"flex items-center\">\n              <InformationCircleIcon className=\"h-4 w-4 mr-1.5\" />\n              Statistics\n            </span>\n          </button>\n        </div>\n      </div>\n      \n      {/* Data Preview View */}\n      {viewMode === 'preview' && (\n        <>\n          {hasMissingValues && (\n            <div className=\"bg-yellow-50 border border-yellow-100 text-yellow-800 p-3 rounded-md text-sm mb-4 flex\">\n              <ExclamationTriangleIcon className=\"h-5 w-5 text-yellow-500 mr-2 flex-shrink-0\" />\n              <p>This dataset contains missing values in some columns. Switch to Statistics view to see details.</p>\n            </div>\n          )}\n          \n          <div className=\"border border-gray-200 rounded-lg overflow-x-auto\">\n            {metadata.preview.length > 0 ? (\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    {metadata.columns.map((column) => (\n                      <th \n                        key={column} \n                        scope=\"col\" \n                        className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider whitespace-nowrap border-r border-gray-100 last:border-r-0\"\n                        title={`Type: ${metadata.dtypes[column]}`}\n                      >\n                        <div className=\"flex items-center\">\n                          <span>{column}</span>\n                          <span className=\"ml-1.5 text-gray-400 text-xs font-normal\">({metadata.dtypes[column].replace('64', '')})</span>\n                        </div>\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {metadata.preview.map((row, index) => (\n                    <tr key={index} className=\"hover:bg-gray-50\">\n                      {metadata.columns.map((column) => (\n                        <td key={column} className=\"px-4 py-2 text-sm text-gray-500 border-r border-gray-100 last:border-r-0 whitespace-nowrap\">\n                          {row[column] !== null ? String(row[column]) : <span className=\"text-gray-300 italic\">null</span>}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <div className=\"text-center py-12 text-gray-500\">\n                <ArrowsUpDownIcon className=\"h-10 w-10 mx-auto text-gray-300 mb-2\" />\n                <p>No data available to preview</p>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"mt-2 text-xs text-gray-500 text-right\">\n            Showing first {metadata.preview.length} of {metadata.row_count.toLocaleString()} rows\n          </div>\n        </>\n      )}\n      \n      {/* Statistics View */}\n      {viewMode === 'stats' && (\n        <>\n          {hasStats ? (\n            <div className=\"border border-gray-200 rounded-lg overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Column</th>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Count</th>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Missing</th>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Unique</th>\n                    {stats.columns.some(col => col.min !== undefined) && (\n                      <>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Min</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Max</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mean</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Std Dev</th>\n                      </>\n                    )}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {stats.columns.map((col) => (\n                    <tr key={col.name} className=\"hover:bg-gray-50\">\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">{col.name}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.dtype.replace('64', '')}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.count.toLocaleString()}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm\">\n                        {col.missing > 0 ? (\n                          <span className=\"text-yellow-600 flex items-center\">\n                            <ExclamationTriangleIcon className=\"h-3.5 w-3.5 mr-1\" />\n                            {col.missing.toLocaleString()} \n                            <span className=\"text-xs text-gray-400 ml-1\">\n                              ({col.missing_pct.toFixed(1)}%)\n                            </span>\n                          </span>\n                        ) : (\n                          <span className=\"text-green-600\">0</span>\n                        )}\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.unique.toLocaleString()}</td>\n                      {col.min !== undefined && (\n                        <>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.min?.toLocaleString()}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.max?.toLocaleString()}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.mean !== undefined ? col.mean.toFixed(2) : '-'}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.std !== undefined ? col.std.toFixed(2) : '-'}</td>\n                        </>\n                      )}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className=\"bg-gray-50 rounded-lg p-12 text-center\">\n              <InformationCircleIcon className=\"h-10 w-10 mx-auto text-gray-300 mb-2\" />\n              <p className=\"text-gray-600\">Loading statistics...</p>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;AALA;;;;;AAYe,SAAS;;IACtB,MAAM,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,SAAM,AAAD;IAChC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IAC7D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IAC9D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,gBAAgB;gBAClB,aAAa;gBACb,UAAU;YACZ,OAAO;gBACL,YAAY;gBACZ,SAAS;YACX;QACF;gCAAG;QAAC;KAAe;IAEnB,MAAM,eAAe,OAAO;QAC1B,IAAI;YACF,WAAW;YACX,SAAS;YACT,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD,EAAE;YACnC,YAAY;QACd,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,2BAA2B;YACzC,SAAS,MAAM,QAAQ,EAAE,MAAM,UAAU;QAC3C,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,YAAY,OAAO;QACvB,IAAI;YACF,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,eAAY,AAAD,EAAE;YAChC,SAAS;QACX,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,wBAAwB;QACtC,kEAAkE;QACpE;IACF;IAEA,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;;;;;sCACf,6LAAC;4BAAI,WAAU;;;;;;;;;;;;8BAEjB,6LAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,gPAAA,CAAA,0BAAuB;oBAAC,WAAU;;;;;;8BACnC,6LAAC;;sCACC,6LAAC;4BAAG,WAAU;sCAAc;;;;;;sCAC5B,6LAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;;;;;;;IAIrC;IAEA,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,MAAM,WAAW,SAAS,MAAM,OAAO,IAAI,MAAM,OAAO,CAAC,MAAM,GAAG;IAClE,MAAM,mBAAmB,YAAY,MAAM,OAAO,CAAC,IAAI,CAAC,CAAA,MAAO,IAAI,OAAO,GAAG;IAE7E,qBACE,6LAAC;;0BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CACX,aAAa,YAAY,iBAAiB;;;;;;0CAE7C,6LAAC;gCAAE,WAAU;;oCACV,SAAS,QAAQ;oCAAC;oCAAI,SAAS,SAAS,CAAC,cAAc;oCAAG;oCAAS,SAAS,YAAY;oCAAC;;;;;;;;;;;;;kCAI9F,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,WAAW,CAAC,uBAAuB,EAAE,aAAa,YAAY,qCAAqC,iBAAiB;gCACpH,SAAS,IAAM,YAAY;0CAE3B,cAAA,6LAAC;oCAAK,WAAU;;sDACd,6LAAC,8NAAA,CAAA,iBAAc;4CAAC,WAAU;;;;;;wCAAmB;;;;;;;;;;;;0CAIjD,6LAAC;gCACC,WAAW,CAAC,uBAAuB,EAAE,aAAa,UAAU,qCAAqC,iBAAiB;gCAClH,SAAS,IAAM,YAAY;0CAE3B,cAAA,6LAAC;oCAAK,WAAU;;sDACd,6LAAC,4OAAA,CAAA,wBAAqB;4CAAC,WAAU;;;;;;wCAAmB;;;;;;;;;;;;;;;;;;;;;;;;YAQ3D,aAAa,2BACZ;;oBACG,kCACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,gPAAA,CAAA,0BAAuB;gCAAC,WAAU;;;;;;0CACnC,6LAAC;0CAAE;;;;;;;;;;;;kCAIP,6LAAC;wBAAI,WAAU;kCACZ,SAAS,OAAO,CAAC,MAAM,GAAG,kBACzB,6LAAC;4BAAM,WAAU;;8CACf,6LAAC;oCAAM,WAAU;8CACf,cAAA,6LAAC;kDACE,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,uBACrB,6LAAC;gDAEC,OAAM;gDACN,WAAU;gDACV,OAAO,CAAC,MAAM,EAAE,SAAS,MAAM,CAAC,OAAO,EAAE;0DAEzC,cAAA,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;sEAAM;;;;;;sEACP,6LAAC;4DAAK,WAAU;;gEAA2C;gEAAE,SAAS,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM;gEAAI;;;;;;;;;;;;;+CAPpG;;;;;;;;;;;;;;;8CAab,6LAAC;oCAAM,WAAU;8CACd,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,sBAC1B,6LAAC;4CAAe,WAAU;sDACvB,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,uBACrB,6LAAC;oDAAgB,WAAU;8DACxB,GAAG,CAAC,OAAO,KAAK,OAAO,OAAO,GAAG,CAAC,OAAO,kBAAI,6LAAC;wDAAK,WAAU;kEAAuB;;;;;;mDAD9E;;;;;2CAFJ;;;;;;;;;;;;;;;iDAWf,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,kOAAA,CAAA,mBAAgB;oCAAC,WAAU;;;;;;8CAC5B,6LAAC;8CAAE;;;;;;;;;;;;;;;;;kCAKT,6LAAC;wBAAI,WAAU;;4BAAwC;4BACtC,SAAS,OAAO,CAAC,MAAM;4BAAC;4BAAK,SAAS,SAAS,CAAC,cAAc;4BAAG;;;;;;;;;YAMrF,aAAa,yBACZ;0BACG,yBACC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;gCAAM,WAAU;0CACf,cAAA,6LAAC;;sDACC,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAC3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAC3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAC3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAC3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;wCAC1G,MAAM,OAAO,CAAC,IAAI,CAAC,CAAA,MAAO,IAAI,GAAG,KAAK,4BACrC;;8DACE,6LAAC;oDAAG,OAAM;oDAAM,WAAU;8DAAiF;;;;;;8DAC3G,6LAAC;oDAAG,OAAM;oDAAM,WAAU;8DAAiF;;;;;;8DAC3G,6LAAC;oDAAG,OAAM;oDAAM,WAAU;8DAAiF;;;;;;8DAC3G,6LAAC;oDAAG,OAAM;oDAAM,WAAU;8DAAiF;;;;;;;;;;;;;;;;;;;0CAKnH,6LAAC;gCAAM,WAAU;0CACd,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,oBAClB,6LAAC;wCAAkB,WAAU;;0DAC3B,6LAAC;gDAAG,WAAU;0DAAiE,IAAI,IAAI;;;;;;0DACvF,6LAAC;gDAAG,WAAU;0DAAqD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM;;;;;;0DAC3F,6LAAC;gDAAG,WAAU;0DAAqD,IAAI,KAAK,CAAC,cAAc;;;;;;0DAC3F,6LAAC;gDAAG,WAAU;0DACX,IAAI,OAAO,GAAG,kBACb,6LAAC;oDAAK,WAAU;;sEACd,6LAAC,gPAAA,CAAA,0BAAuB;4DAAC,WAAU;;;;;;wDAClC,IAAI,OAAO,CAAC,cAAc;sEAC3B,6LAAC;4DAAK,WAAU;;gEAA6B;gEACzC,IAAI,WAAW,CAAC,OAAO,CAAC;gEAAG;;;;;;;;;;;;yEAIjC,6LAAC;oDAAK,WAAU;8DAAiB;;;;;;;;;;;0DAGrC,6LAAC;gDAAG,WAAU;0DAAqD,IAAI,MAAM,CAAC,cAAc;;;;;;4CAC3F,IAAI,GAAG,KAAK,2BACX;;kEACE,6LAAC;wDAAG,WAAU;kEAAqD,IAAI,GAAG,EAAE;;;;;;kEAC5E,6LAAC;wDAAG,WAAU;kEAAqD,IAAI,GAAG,EAAE;;;;;;kEAC5E,6LAAC;wDAAG,WAAU;kEAAqD,IAAI,IAAI,KAAK,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK;;;;;;kEAClH,6LAAC;wDAAG,WAAU;kEAAqD,IAAI,GAAG,KAAK,YAAY,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK;;;;;;;;;uCAvB7G,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;yCAgCzB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,4OAAA,CAAA,wBAAqB;4BAAC,WAAU;;;;;;sCACjC,6LAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;;;;;;;;AAO3C;GArOwB;;QACK,gIAAA,CAAA,SAAM;;;KADX","debugId":null}},
    {"offset": {"line": 1327, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/components/ColumnVisualizations.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useCSV } from '@/context/CSVContext';\nimport { getFileMetadata, getColumnVisualization, CSVMetadata } from '@/services/api';\nimport dynamic from 'next/dynamic';\nimport { \n  ArrowsPointingOutIcon, \n  ChartBarIcon, \n  ChartPieIcon,\n  ArrowPathIcon,\n  ExclamationTriangleIcon,\n  QuestionMarkCircleIcon\n} from '@heroicons/react/24/outline';\n\n// Import plotly dynamically to avoid SSR issues\nconst Plot = dynamic(() => import('react-plotly.js'), { ssr: false });\n\nexport default function ColumnVisualizations() {\n  const { selectedFileId } = useCSV();\n  const [metadata, setMetadata] = useState<CSVMetadata | null>(null);\n  const [selectedColumn, setSelectedColumn] = useState<string | null>(null);\n  const [visualizations, setVisualizations] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [fullScreen, setFullScreen] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (selectedFileId) {\n      fetchMetadata(selectedFileId);\n    } else {\n      setMetadata(null);\n      setSelectedColumn(null);\n      setVisualizations(null);\n    }\n  }, [selectedFileId]);\n\n  useEffect(() => {\n    if (selectedFileId && selectedColumn) {\n      fetchVisualizations(selectedFileId, selectedColumn);\n    } else {\n      setVisualizations(null);\n    }\n  }, [selectedFileId, selectedColumn]);\n\n  const fetchMetadata = async (fileId: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await getFileMetadata(fileId);\n      setMetadata(data);\n      // Select the first column by default\n      if (data.columns.length > 0) {\n        setSelectedColumn(data.columns[0]);\n      }\n    } catch (error: any) {\n      console.error('Error loading metadata:', error);\n      setError(error.response?.data?.detail || 'Failed to load file data.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchVisualizations = async (fileId: string, column: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await getColumnVisualization(fileId, column);\n      setVisualizations(data);\n    } catch (error: any) {\n      console.error('Error loading visualizations:', error);\n      setError(error.response?.data?.detail || 'Failed to load visualizations.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    if (selectedFileId && selectedColumn) {\n      fetchVisualizations(selectedFileId, selectedColumn);\n    }\n  };\n\n  const toggleFullScreen = () => {\n    setFullScreen(!fullScreen);\n  };\n\n  if (loading && !visualizations && !metadata) {\n    return (\n      <div className=\"animate-pulse space-y-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"h-8 bg-gray-100 rounded w-1/3\"></div>\n          <div className=\"h-8 bg-gray-100 rounded w-32\"></div>\n        </div>\n        <div className=\"h-80 bg-gray-100 rounded w-full\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-100 text-red-600 p-4 rounded-md flex items-start\">\n        <ExclamationTriangleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n        <div>\n          <h3 className=\"font-medium\">Error loading visualizations</h3>\n          <p className=\"text-sm mt-1\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!metadata || !selectedColumn) {\n    return null;\n  }\n\n  const isNumerical = metadata.dtypes[selectedColumn]?.includes('int') || \n                      metadata.dtypes[selectedColumn]?.includes('float');\n\n  // Classification of different column types for better visualization guidance\n  const getColumnTypeInfo = () => {\n    if (isNumerical) {\n      return {\n        type: 'numerical',\n        icon: <ChartBarIcon className=\"h-5 w-5 text-blue-500\" />,\n        label: 'Numerical Data',\n        description: 'This column contains numerical values. Histograms and box plots are available.'\n      };\n    } else {\n      const uniqueCount = visualizations?.barplot?.data[0]?.x?.length || 0;\n      if (uniqueCount > 15) {\n        return {\n          type: 'high-cardinality',\n          icon: <ChartPieIcon className=\"h-5 w-5 text-orange-500\" />,\n          label: 'High Cardinality',\n          description: `This column has ${uniqueCount} unique values, which is high. Consider using a different column for clearer visualizations.`\n        };\n      } else {\n        return {\n          type: 'categorical',\n          icon: <ChartPieIcon className=\"h-5 w-5 text-green-500\" />,\n          label: 'Categorical Data',\n          description: 'This column contains categorical values. Bar chart distribution is available.'\n        };\n      }\n    }\n  };\n\n  const columnTypeInfo = getColumnTypeInfo();\n\n  return (\n    <div className={`${fullScreen ? 'fixed inset-0 bg-white p-4 z-50 overflow-auto' : ''}`}>\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h2 className=\"text-lg font-medium text-gray-900\">Column Visualizations</h2>\n          <p className=\"text-sm text-gray-500 mt-1\">\n            Explore and analyze data in each column\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button \n            onClick={handleRefresh} \n            className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n            title=\"Refresh visualization\"\n          >\n            <ArrowPathIcon className=\"h-5 w-5\" />\n          </button>\n          <button \n            onClick={toggleFullScreen} \n            className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n            title={fullScreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n          >\n            <ArrowsPointingOutIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"mb-6 flex flex-col md:flex-row md:items-center gap-4\">\n        <div className=\"flex-1\">\n          <label htmlFor=\"column-select\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Select column to visualize:\n          </label>\n          <div className=\"relative\">\n            <select\n              id=\"column-select\"\n              value={selectedColumn}\n              onChange={(e) => setSelectedColumn(e.target.value)}\n              className=\"block w-full border border-gray-300 rounded-md shadow-sm p-2 pr-10 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n            >\n              {metadata.columns.map((column) => (\n                <option key={column} value={column}>\n                  {column} ({metadata.dtypes[column].replace('64', '')})\n                </option>\n              ))}\n            </select>\n            <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n              <ChartBarIcon className=\"h-4 w-4 text-gray-400\" />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-gray-50 rounded-lg p-3 flex items-start flex-shrink-0 md:w-72\">\n          {columnTypeInfo.icon}\n          <div className=\"ml-2\">\n            <h4 className=\"text-sm font-medium text-gray-900\">{columnTypeInfo.label}</h4>\n            <p className=\"text-xs text-gray-500\">{columnTypeInfo.description}</p>\n          </div>\n        </div>\n      </div>\n      \n      {loading && (\n        <div className=\"animate-pulse\">\n          <div className=\"h-80 bg-gray-100 rounded-lg w-full\"></div>\n        </div>\n      )}\n      \n      {!loading && visualizations && (\n        <div className=\"space-y-8\">\n          {isNumerical ? (\n            <>\n              {visualizations.histogram && (\n                <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden\">\n                  <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">Histogram</h3>\n                    <div className=\"flex items-center\">\n                      <div className=\"group relative\">\n                        <button className=\"p-1.5 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-700\">\n                          <QuestionMarkCircleIcon className=\"h-5 w-5\" />\n                        </button>\n                        <div className=\"absolute right-0 top-full mt-2 w-64 rounded-lg bg-gray-800 text-white text-xs px-3 py-2 shadow-lg hidden group-hover:block z-10\">\n                          A histogram shows the distribution of values in a numerical column, grouped into bins. \n                          The x-axis represents the value ranges and the y-axis shows the frequency (count) of values.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"p-4\">\n                    <Plot\n                      data={visualizations.histogram.data}\n                      layout={{\n                        ...visualizations.histogram.layout,\n                        autosize: true,\n                        height: 400,\n                        margin: { l: 50, r: 20, t: 30, b: 50 },\n                        modebar: { orientation: 'v' },\n                        xaxis: {\n                          ...visualizations.histogram.layout.xaxis,\n                          title: selectedColumn\n                        },\n                        yaxis: {\n                          ...visualizations.histogram.layout.yaxis,\n                          title: 'Frequency'\n                        }\n                      }}\n                      config={{ \n                        responsive: true,\n                        displayModeBar: true,\n                        displaylogo: false,\n                        modeBarButtonsToRemove: ['lasso2d', 'select2d', 'sendDataToCloud']\n                      }}\n                      style={{ width: '100%', height: '100%' }}\n                    />\n                  </div>\n                </div>\n              )}\n              \n              {visualizations.boxplot && (\n                <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden\">\n                  <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">Box Plot</h3>\n                    <div className=\"flex items-center\">\n                      <div className=\"group relative\">\n                        <button className=\"p-1.5 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-700\">\n                          <QuestionMarkCircleIcon className=\"h-5 w-5\" />\n                        </button>\n                        <div className=\"absolute right-0 top-full mt-2 w-64 rounded-lg bg-gray-800 text-white text-xs px-3 py-2 shadow-lg hidden group-hover:block z-10\">\n                          A box plot shows the distribution of a numerical column with a box showing the quartiles (25%, median, 75%) \n                          and whiskers extending to the min/max values (excluding outliers). Outliers are shown as individual points.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"p-4\">\n                    <Plot\n                      data={visualizations.boxplot.data}\n                      layout={{\n                        ...visualizations.boxplot.layout,\n                        autosize: true,\n                        height: 400,\n                        margin: { l: 50, r: 20, t: 30, b: 50 },\n                        xaxis: {\n                          title: '',\n                          zeroline: false\n                        },\n                        yaxis: {\n                          ...visualizations.boxplot.layout.yaxis,\n                          title: selectedColumn\n                        }\n                      }}\n                      config={{ \n                        responsive: true,\n                        displayModeBar: true,\n                        displaylogo: false,\n                        modeBarButtonsToRemove: ['lasso2d', 'select2d', 'sendDataToCloud']\n                      }}\n                      style={{ width: '100%', height: '100%' }}\n                    />\n                  </div>\n                </div>\n              )}\n            </>\n          ) : (\n            <>\n              {visualizations.barplot && (\n                <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden\">\n                  <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">Category Distribution</h3>\n                    <div className=\"flex items-center\">\n                      <div className=\"group relative\">\n                        <button className=\"p-1.5 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-700\">\n                          <QuestionMarkCircleIcon className=\"h-5 w-5\" />\n                        </button>\n                        <div className=\"absolute right-0 top-full mt-2 w-64 rounded-lg bg-gray-800 text-white text-xs px-3 py-2 shadow-lg hidden group-hover:block z-10\">\n                          This bar chart shows the distribution of categories in this column. \n                          The x-axis shows each unique value and the y-axis shows how many times each value appears in the dataset.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"p-4\">\n                    <Plot\n                      data={visualizations.barplot.data}\n                      layout={{\n                        ...visualizations.barplot.layout,\n                        autosize: true,\n                        height: 400,\n                        margin: { l: 50, r: 20, t: 30, b: 100 },\n                        xaxis: {\n                          ...visualizations.barplot.layout.xaxis,\n                          title: selectedColumn,\n                          tickangle: visualizations.barplot.data[0].x.length > 5 ? -45 : 0\n                        },\n                        yaxis: {\n                          ...visualizations.barplot.layout.yaxis,\n                          title: 'Count'\n                        }\n                      }}\n                      config={{ \n                        responsive: true,\n                        displayModeBar: true,\n                        displaylogo: false,\n                        modeBarButtonsToRemove: ['lasso2d', 'select2d', 'sendDataToCloud']\n                      }}\n                      style={{ width: '100%', height: '100%' }}\n                    />\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      )}\n      \n      {fullScreen && (\n        <div className=\"fixed bottom-4 right-4\">\n          <button\n            onClick={toggleFullScreen}\n            className=\"bg-gray-800 text-white px-4 py-2 rounded-md shadow-lg flex items-center\"\n          >\n            <ArrowsPointingOutIcon className=\"h-5 w-5 mr-2\" />\n            Exit Fullscreen\n          </button>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2164, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/components/CorrelationAnalysis.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useCSV } from '@/context/CSVContext';\nimport { getCorrelation, CorrelationData } from '@/services/api';\nimport dynamic from 'next/dynamic';\nimport { \n  ArrowsPointingOutIcon, \n  ArrowPathIcon,\n  ExclamationTriangleIcon,\n  QuestionMarkCircleIcon,\n  LightBulbIcon,\n  ChartBarSquareIcon\n} from '@heroicons/react/24/outline';\n\n// Import plotly dynamically to avoid SSR issues\nconst Plot = dynamic(() => import('react-plotly.js'), { ssr: false });\n\nexport default function CorrelationAnalysis() {\n  const { selectedFileId } = useCSV();\n  const [correlationData, setCorrelationData] = useState<CorrelationData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [fullScreen, setFullScreen] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (selectedFileId) {\n      fetchCorrelationData(selectedFileId);\n    } else {\n      setCorrelationData(null);\n    }\n  }, [selectedFileId]);\n\n  const fetchCorrelationData = async (fileId: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await getCorrelation(fileId);\n      setCorrelationData(data);\n    } catch (error: any) {\n      console.error('Error loading correlation data:', error);\n      setError(error.response?.data?.detail || 'Failed to load correlation data.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    if (selectedFileId) {\n      fetchCorrelationData(selectedFileId);\n    }\n  };\n\n  const toggleFullScreen = () => {\n    setFullScreen(!fullScreen);\n  };\n\n  // Find insights from correlation data\n  const findInsights = () => {\n    if (!correlationData || !correlationData.correlations) return [];\n    \n    const insights = [];\n    \n    // Filter out self-correlations and get absolute values\n    const filteredCorrelations = correlationData.correlations\n      .filter(c => c.x !== c.y)\n      .map(c => ({...c, absCorrelation: Math.abs(c.correlation)}));\n    \n    // Find strong correlations (positive and negative)\n    const strongPositiveCorrelations = filteredCorrelations\n      .filter(c => c.correlation > 0.7)\n      .sort((a, b) => b.correlation - a.correlation)\n      .slice(0, 3);\n      \n    const strongNegativeCorrelations = filteredCorrelations\n      .filter(c => c.correlation < -0.7)\n      .sort((a, b) => a.correlation - b.correlation)\n      .slice(0, 3);\n    \n    // Add insights for strong positive correlations\n    if (strongPositiveCorrelations.length > 0) {\n      insights.push({\n        type: 'positive',\n        title: 'Strong Positive Correlations',\n        description: 'These variables tend to increase together:',\n        correlations: strongPositiveCorrelations\n      });\n    }\n    \n    // Add insights for strong negative correlations\n    if (strongNegativeCorrelations.length > 0) {\n      insights.push({\n        type: 'negative',\n        title: 'Strong Negative Correlations', \n        description: 'As one variable increases, the other tends to decrease:',\n        correlations: strongNegativeCorrelations\n      });\n    }\n    \n    // Find variables with no strong correlations\n    const weaklyCorrelatedVars = new Set();\n    \n    // Get variables that don't have any correlation above 0.4 in absolute value\n    correlationData.columns.forEach(col => {\n      const hasStrongCorrelation = filteredCorrelations\n        .some(c => (c.x === col || c.y === col) && Math.abs(c.correlation) > 0.4);\n      \n      if (!hasStrongCorrelation) {\n        weaklyCorrelatedVars.add(col);\n      }\n    });\n    \n    if (weaklyCorrelatedVars.size > 0) {\n      insights.push({\n        type: 'weak',\n        title: 'Independent Variables',\n        description: 'These variables show little correlation with others:',\n        variables: Array.from(weaklyCorrelatedVars)\n      });\n    }\n    \n    return insights;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"animate-pulse space-y-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"h-8 bg-gray-100 rounded w-1/3\"></div>\n          <div className=\"h-8 bg-gray-100 rounded w-32\"></div>\n        </div>\n        <div className=\"h-80 bg-gray-100 rounded w-full\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-100 text-red-600 p-4 rounded-md flex items-start\">\n        <ExclamationTriangleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n        <div>\n          <h3 className=\"font-medium\">Error loading correlation data</h3>\n          <p className=\"text-sm mt-1\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!correlationData) {\n    return null;\n  }\n\n  if (correlationData.message) {\n    return (\n      <div className=\"bg-yellow-50 border border-yellow-100 text-yellow-700 p-4 rounded-md flex items-start\">\n        <ExclamationTriangleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n        <div>\n          <h3 className=\"font-medium\">Correlation Analysis Unavailable</h3>\n          <p className=\"text-sm mt-1\">{correlationData.message}</p>\n          <p className=\"text-sm mt-1\">Try uploading a CSV file with at least two numerical columns.</p>\n        </div>\n      </div>\n    );\n  }\n  \n  const insights = findInsights();\n\n  return (\n    <div className={`${fullScreen ? 'fixed inset-0 bg-white p-4 z-50 overflow-auto' : ''}`}>\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h2 className=\"text-lg font-medium text-gray-900\">Correlation Analysis</h2>\n          <p className=\"text-sm text-gray-500 mt-1\">\n            Explore relationships between numerical variables\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button \n            onClick={handleRefresh} \n            className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n            title=\"Refresh correlation analysis\"\n          >\n            <ArrowPathIcon className=\"h-5 w-5\" />\n          </button>\n          <button \n            onClick={toggleFullScreen} \n            className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n            title={fullScreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n          >\n            <ArrowsPointingOutIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden mb-8\">\n        <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Correlation Heatmap</h3>\n          <div className=\"flex items-center\">\n            <div className=\"group relative\">\n              <button className=\"p-1.5 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-700\">\n                <QuestionMarkCircleIcon className=\"h-5 w-5\" />\n              </button>\n              <div className=\"absolute right-0 top-full mt-2 w-72 rounded-lg bg-gray-800 text-white text-xs px-3 py-2 shadow-lg hidden group-hover:block z-10\">\n                This heatmap shows the Pearson correlation coefficients between numerical columns. \n                Values range from -1 (perfect negative correlation) to +1 (perfect positive correlation),\n                with 0 indicating no linear correlation. Hover over cells to see exact values.\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"p-4\">\n          <div className=\"border border-gray-100 rounded-lg overflow-hidden\">\n            <Plot\n              data={correlationData.visualization.data}\n              layout={{\n                ...correlationData.visualization.layout,\n                autosize: true,\n                height: 500,\n                margin: { l: 80, r: 20, t: 30, b: 80 }\n              }}\n              config={{ \n                responsive: true,\n                displayModeBar: true,\n                displaylogo: false,\n                modeBarButtonsToRemove: ['lasso2d', 'select2d', 'sendDataToCloud']\n              }}\n              style={{ width: '100%', height: '100%' }}\n            />\n          </div>\n          \n          <div className=\"mt-2 text-center\">\n            <div className=\"inline-flex items-center justify-center space-x-1 mt-2\">\n              <div className=\"h-3 w-4 bg-blue-700\"></div>\n              <div className=\"h-3 w-4 bg-blue-500\"></div>\n              <div className=\"h-3 w-4 bg-blue-300\"></div>\n              <div className=\"h-3 w-4 bg-gray-200\"></div>\n              <div className=\"h-3 w-4 bg-red-300\"></div>\n              <div className=\"h-3 w-4 bg-red-500\"></div>\n              <div className=\"h-3 w-4 bg-red-700\"></div>\n            </div>\n            <div className=\"flex items-center justify-center text-xs text-gray-500 mt-1\">\n              <span>-1</span>\n              <div className=\"mx-2 flex-1\"></div>\n              <span>0</span>\n              <div className=\"mx-2 flex-1\"></div>\n              <span>+1</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Correlation Insights */}\n      {insights.length > 0 && (\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <LightBulbIcon className=\"h-5 w-5 text-yellow-500 mr-2\" />\n            <h3 className=\"text-lg font-medium text-gray-900\">Insights</h3>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {insights.map((insight, idx) => (\n              <div \n                key={idx} \n                className={`border rounded-lg overflow-hidden shadow-sm ${\n                  insight.type === 'positive' \n                    ? 'border-green-100 bg-green-50' \n                    : insight.type === 'negative'\n                      ? 'border-red-100 bg-red-50'\n                      : 'border-gray-100 bg-gray-50'\n                }`}\n              >\n                <div className={`border-b px-4 py-3 ${\n                  insight.type === 'positive' \n                    ? 'border-green-100 bg-green-100/60' \n                    : insight.type === 'negative'\n                      ? 'border-red-100 bg-red-100/60'\n                      : 'border-gray-100 bg-gray-100/60'\n                }`}>\n                  <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\n                </div>\n                <div className=\"p-4\">\n                  <p className=\"text-sm text-gray-600 mb-2\">{insight.description}</p>\n                  \n                  {insight.correlations && (\n                    <div className=\"space-y-2\">\n                      {insight.correlations.map((corr, i) => (\n                        <div key={i} className=\"bg-white rounded-md border border-gray-100 p-2 text-sm\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"font-medium\">{corr.x} â†” {corr.y}</span>\n                            <span className={`px-2 py-0.5 rounded-full text-xs font-medium ${\n                              corr.correlation > 0 \n                                ? 'bg-green-100 text-green-800' \n                                : 'bg-red-100 text-red-800'\n                            }`}>\n                              {corr.correlation.toFixed(2)}\n                            </span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {insight.variables && (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {insight.variables.map((variable, i) => (\n                        <span key={i} className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n                          {variable}\n                        </span>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      \n      {/* Table of Strong Correlations */}\n      <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden\">\n        <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <ChartBarSquareIcon className=\"h-5 w-5 text-gray-500 mr-2\" />\n            <h3 className=\"text-lg font-medium text-gray-900\">Strongest Correlations</h3>\n          </div>\n        </div>\n        \n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Column 1\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Column 2\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Correlation\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Strength\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Relationship\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {correlationData.correlations\n                .filter(c => c.x !== c.y) // Remove self-correlations\n                .sort((a, b) => Math.abs(b.correlation) - Math.abs(a.correlation)) // Sort by absolute value\n                .slice(0, 8) // Take top 8\n                .map((corr, index) => (\n                  <tr key={index} className=\"hover:bg-gray-50\">\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {corr.x}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {corr.y}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                      <span className={`font-medium ${\n                        corr.correlation > 0.2 \n                          ? 'text-green-600' \n                          : corr.correlation < -0.2 \n                            ? 'text-red-600' \n                            : 'text-gray-500'\n                      }`}>\n                        {corr.correlation.toFixed(3)}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                      <span\n                        className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          Math.abs(corr.correlation) > 0.7\n                            ? 'bg-blue-100 text-blue-800'\n                            : Math.abs(corr.correlation) > 0.4\n                            ? 'bg-green-100 text-green-800'\n                            : 'bg-gray-100 text-gray-800'\n                        }`}\n                      >\n                        {Math.abs(corr.correlation) > 0.7\n                          ? 'Strong'\n                          : Math.abs(corr.correlation) > 0.4\n                          ? 'Moderate'\n                          : 'Weak'}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500\">\n                      {corr.correlation > 0 \n                        ? 'When one increases, the other increases' \n                        : 'When one increases, the other decreases'}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      \n      {fullScreen && (\n        <div className=\"fixed bottom-4 right-4\">\n          <button\n            onClick={toggleFullScreen}\n            className=\"bg-gray-800 text-white px-4 py-2 rounded-md shadow-lg flex items-center\"\n          >\n            <ArrowsPointingOutIcon className=\"h-5 w-5 mr-2\" />\n            Exit Fullscreen\n          </button>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3100, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport FileUpload from '@/components/FileUpload';\nimport FileList from '@/components/FileList';\nimport DataPreview from '@/components/DataPreview';\nimport ColumnVisualizations from '@/components/ColumnVisualizations';\nimport CorrelationAnalysis from '@/components/CorrelationAnalysis';\nimport { useCSV } from '@/context/CSVContext';\nimport { \n  ChartBarIcon, \n  TableCellsIcon, \n  ArrowsRightLeftIcon,\n  DocumentTextIcon,\n  ArrowUpTrayIcon\n} from '@heroicons/react/24/outline';\n\nexport default function Home() {\n  const { selectedFileId } = useCSV();\n  const [activeTab, setActiveTab] = useState<'data' | 'visualizations' | 'correlation'>('data');\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-5\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">CSV Analytics Dashboard</h1>\n              <p className=\"text-gray-500 mt-1\">Upload and analyze CSV files with interactive visualizations</p>\n            </div>\n            {selectedFileId && (\n              <div className=\"bg-blue-50 text-blue-700 px-3 py-1 rounded-full text-sm font-medium\">\n                Active file selected\n              </div>\n            )}\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-4\">\n          {/* Sidebar */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            <div className=\"bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg p-1\">\n              <div className=\"bg-white rounded-md p-5\">\n                <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-gradient-to-r from-blue-500 to-purple-600 text-white mx-auto mb-4\">\n                  <ArrowUpTrayIcon className=\"h-6 w-6\" />\n                </div>\n                <h2 className=\"text-xl font-semibold text-center mb-4\">Upload Data</h2>\n                <FileUpload />\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-sm overflow-hidden border border-gray-100\">\n              <div className=\"p-5 border-b border-gray-100\">\n                <div className=\"flex items-center\">\n                  <DocumentTextIcon className=\"h-5 w-5 text-gray-500 mr-2\" />\n                  <h2 className=\"text-lg font-medium\">CSV Files</h2>\n                </div>\n              </div>\n              <div className=\"p-0\">\n                <FileList />\n              </div>\n            </div>\n          </div>\n\n          {/* Main content */}\n          <div className=\"lg:col-span-3 space-y-6\">\n            {selectedFileId ? (\n              <>\n                {/* Tabs */}\n                <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden\">\n                  <div className=\"flex border-b border-gray-100\">\n                    <button\n                      className={`flex items-center px-6 py-4 text-sm font-medium ${\n                        activeTab === 'data' \n                          ? 'text-blue-600 border-b-2 border-blue-600' \n                          : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\n                      }`}\n                      onClick={() => setActiveTab('data')}\n                    >\n                      <TableCellsIcon className=\"h-5 w-5 mr-2\" />\n                      Data Preview\n                    </button>\n                    <button\n                      className={`flex items-center px-6 py-4 text-sm font-medium ${\n                        activeTab === 'visualizations' \n                          ? 'text-blue-600 border-b-2 border-blue-600' \n                          : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\n                      }`}\n                      onClick={() => setActiveTab('visualizations')}\n                    >\n                      <ChartBarIcon className=\"h-5 w-5 mr-2\" />\n                      Visualizations\n                    </button>\n                    <button\n                      className={`flex items-center px-6 py-4 text-sm font-medium ${\n                        activeTab === 'correlation' \n                          ? 'text-blue-600 border-b-2 border-blue-600' \n                          : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\n                      }`}\n                      onClick={() => setActiveTab('correlation')}\n                    >\n                      <ArrowsRightLeftIcon className=\"h-5 w-5 mr-2\" />\n                      Correlation\n                    </button>\n                  </div>\n                  \n                  <div className=\"p-6\">\n                    {activeTab === 'data' && <DataPreview />}\n                    {activeTab === 'visualizations' && <ColumnVisualizations />}\n                    {activeTab === 'correlation' && <CorrelationAnalysis />}\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-10 text-center\">\n                <div className=\"flex justify-center mb-6\">\n                  <div className=\"h-24 w-24 bg-blue-50 rounded-full flex items-center justify-center\">\n                    <ChartBarIcon className=\"h-12 w-12 text-blue-500\" />\n                  </div>\n                </div>\n                <h2 className=\"text-2xl font-semibold mb-4\">Welcome to CSV Analytics Dashboard</h2>\n                <p className=\"text-gray-600 mb-8 max-w-lg mx-auto\">\n                  Upload a CSV file to get started with data analysis and visualization.\n                </p>\n                <div className=\"bg-gray-50 rounded-lg p-6 max-w-lg mx-auto text-left\">\n                  <h3 className=\"font-medium text-gray-900 mb-3\">With this tool you can:</h3>\n                  <ul className=\"space-y-3 text-gray-600\">\n                    <li className=\"flex items-start\">\n                      <span className=\"flex-shrink-0 h-5 w-5 rounded-full bg-green-100 text-green-500 flex items-center justify-center mr-2\">âœ“</span>\n                      Upload any CSV file from your computer\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"flex-shrink-0 h-5 w-5 rounded-full bg-green-100 text-green-500 flex items-center justify-center mr-2\">âœ“</span>\n                      View data preview and statistics\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"flex-shrink-0 h-5 w-5 rounded-full bg-green-100 text-green-500 flex items-center justify-center mr-2\">âœ“</span>\n                      Explore visualizations for each column\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"flex-shrink-0 h-5 w-5 rounded-full bg-green-100 text-green-500 flex items-center justify-center mr-2\">âœ“</span>\n                      Analyze correlations between numerical columns\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n\n      <footer className=\"bg-white border-t border-gray-200 mt-12\">\n        <div className=\"max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8\">\n          <p className=\"text-center text-gray-500 text-sm\">\n            CSV Analytics Dashboard â€¢ Built with Next.js and FastAPI\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}