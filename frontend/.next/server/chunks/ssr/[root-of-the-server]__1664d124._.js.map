{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/components/DataPreview.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { getFileMetadata, getFileStats, CSVMetadata, FileStats } from '@/services/api';\nimport { useCSV } from '@/context/CSVContext';\nimport { \n  TableCellsIcon, \n  InformationCircleIcon,\n  ExclamationTriangleIcon,\n  ArrowsUpDownIcon,\n  ArrowPathIcon\n} from '@heroicons/react/24/outline';\n\nexport default function DataPreview() {\n  const { selectedFileId } = useCSV();\n  const [metadata, setMetadata] = useState<any>(null);\n  const [stats, setStats] = useState<any>(null);\n  const [viewMode, setViewMode] = useState<'preview' | 'stats'>('preview');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (selectedFileId) {\n      loadData(selectedFileId);\n    } else {\n      setMetadata(null);\n      setStats(null);\n    }\n  }, [selectedFileId]);\n\n  const loadData = async (fileId: string) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const [metadataResult, statsResult] = await Promise.allSettled([\n        getFileMetadata(fileId),\n        getFileStats(fileId)\n      ]);\n      \n      if (metadataResult.status === 'fulfilled') {\n        setMetadata(metadataResult.value);\n      } else {\n        console.error('Error loading metadata:', metadataResult.reason);\n        throw metadataResult.reason;\n      }\n      \n      if (statsResult.status === 'fulfilled') {\n        setStats(statsResult.value);\n      } else {\n        console.error('Error loading stats:', statsResult.reason);\n      }\n    } catch (err: any) {\n      console.error('Error loading data:', err);\n      const errorMessage = err.userMessage || \n        'Failed to load data preview. Please check if the backend server is running.';\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"animate-pulse space-y-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"h-8 bg-gray-100 rounded w-1/3\"></div>\n          <div className=\"h-8 bg-gray-100 rounded w-32\"></div>\n        </div>\n        <div className=\"h-80 bg-gray-100 rounded w-full\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-100 rounded-lg p-6 text-center\">\n        <div className=\"flex flex-col items-center\">\n          <ExclamationTriangleIcon className=\"h-12 w-12 text-red-500 mb-4\" />\n          <h3 className=\"text-lg font-medium text-red-800 mb-2\">Error Loading Data</h3>\n          <p className=\"text-red-700 mb-4\">{error}</p>\n          <button\n            onClick={() => selectedFileId && loadData(selectedFileId)}\n            className=\"px-4 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200 flex items-center\"\n          >\n            <ArrowPathIcon className=\"h-5 w-5 mr-1\" />\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!metadata) {\n    return null;\n  }\n\n  const hasStats = stats && stats.columns && stats.columns.length > 0;\n  const hasMissingValues = hasStats && stats.columns.some(col => col.missing > 0);\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h2 className=\"text-lg font-medium text-gray-900\">\n            {viewMode === 'preview' ? 'Data Preview' : 'Column Statistics'}\n          </h2>\n          <p className=\"text-sm text-gray-500 mt-1\">\n            {metadata.filename} • {metadata.row_count.toLocaleString()} rows × {metadata.column_count} columns\n          </p>\n        </div>\n        \n        <div className=\"bg-gray-100 rounded-lg p-0.5 flex text-sm\">\n          <button\n            className={`px-3 py-1.5 rounded-md ${viewMode === 'preview' ? 'bg-white shadow-sm text-gray-800' : 'text-gray-600'}`}\n            onClick={() => setViewMode('preview')}\n          >\n            <span className=\"flex items-center\">\n              <TableCellsIcon className=\"h-4 w-4 mr-1.5\" />\n              Preview\n            </span>\n          </button>\n          <button\n            className={`px-3 py-1.5 rounded-md ${viewMode === 'stats' ? 'bg-white shadow-sm text-gray-800' : 'text-gray-600'}`}\n            onClick={() => setViewMode('stats')}\n          >\n            <span className=\"flex items-center\">\n              <InformationCircleIcon className=\"h-4 w-4 mr-1.5\" />\n              Statistics\n            </span>\n          </button>\n        </div>\n      </div>\n      \n      {/* Data Preview View */}\n      {viewMode === 'preview' && (\n        <>\n          {hasMissingValues && (\n            <div className=\"bg-yellow-50 border border-yellow-100 text-yellow-800 p-3 rounded-md text-sm mb-4 flex\">\n              <ExclamationTriangleIcon className=\"h-5 w-5 text-yellow-500 mr-2 flex-shrink-0\" />\n              <p>This dataset contains missing values in some columns. Switch to Statistics view to see details.</p>\n            </div>\n          )}\n          \n          <div className=\"border border-gray-200 rounded-lg overflow-x-auto\">\n            {metadata.preview.length > 0 ? (\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    {metadata.columns.map((column) => (\n                      <th \n                        key={column} \n                        scope=\"col\" \n                        className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider whitespace-nowrap border-r border-gray-100 last:border-r-0\"\n                        title={`Type: ${metadata.dtypes[column]}`}\n                      >\n                        <div className=\"flex items-center\">\n                          <span>{column}</span>\n                          <span className=\"ml-1.5 text-gray-400 text-xs font-normal\">({metadata.dtypes[column].replace('64', '')})</span>\n                        </div>\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {metadata.preview.map((row, index) => (\n                    <tr key={index} className=\"hover:bg-gray-50\">\n                      {metadata.columns.map((column) => (\n                        <td key={column} className=\"px-4 py-2 text-sm text-gray-500 border-r border-gray-100 last:border-r-0 whitespace-nowrap\">\n                          {row[column] !== null ? String(row[column]) : <span className=\"text-gray-300 italic\">null</span>}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <div className=\"text-center py-12 text-gray-500\">\n                <ArrowsUpDownIcon className=\"h-10 w-10 mx-auto text-gray-300 mb-2\" />\n                <p>No data available to preview</p>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"mt-2 text-xs text-gray-500 text-right\">\n            Showing first {metadata.preview.length} of {metadata.row_count.toLocaleString()} rows\n          </div>\n        </>\n      )}\n      \n      {/* Statistics View */}\n      {viewMode === 'stats' && (\n        <>\n          {hasStats ? (\n            <div className=\"border border-gray-200 rounded-lg overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Column</th>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Count</th>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Missing</th>\n                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Unique</th>\n                    {stats.columns.some(col => col.min !== undefined) && (\n                      <>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Min</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Max</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mean</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Std Dev</th>\n                      </>\n                    )}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {stats.columns.map((col) => (\n                    <tr key={col.name} className=\"hover:bg-gray-50\">\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">{col.name}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.dtype.replace('64', '')}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.count.toLocaleString()}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm\">\n                        {col.missing > 0 ? (\n                          <span className=\"text-yellow-600 flex items-center\">\n                            <ExclamationTriangleIcon className=\"h-3.5 w-3.5 mr-1\" />\n                            {col.missing.toLocaleString()} \n                            <span className=\"text-xs text-gray-400 ml-1\">\n                              ({col.missing_pct.toFixed(1)}%)\n                            </span>\n                          </span>\n                        ) : (\n                          <span className=\"text-green-600\">0</span>\n                        )}\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.unique.toLocaleString()}</td>\n                      {col.min !== undefined && (\n                        <>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.min?.toLocaleString()}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.max?.toLocaleString()}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.mean !== undefined ? col.mean.toFixed(2) : '-'}</td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{col.std !== undefined ? col.std.toFixed(2) : '-'}</td>\n                        </>\n                      )}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className=\"bg-gray-50 rounded-lg p-12 text-center\">\n              <InformationCircleIcon className=\"h-10 w-10 mx-auto text-gray-300 mb-2\" />\n              <p className=\"text-gray-600\">Loading statistics...</p>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 738, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/components/ColumnVisualizations.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useCSV } from '@/context/CSVContext';\nimport { getFileMetadata, getColumnVisualization, CSVMetadata } from '@/services/api';\nimport dynamic from 'next/dynamic';\nimport { \n  ArrowsPointingOutIcon, \n  ChartBarIcon, \n  ChartPieIcon,\n  ArrowPathIcon,\n  ExclamationTriangleIcon,\n  QuestionMarkCircleIcon\n} from '@heroicons/react/24/outline';\n\n// Import plotly dynamically to avoid SSR issues\nconst Plot = dynamic(() => import('react-plotly.js'), { ssr: false });\n\nexport default function ColumnVisualizations() {\n  const { selectedFileId } = useCSV();\n  const [metadata, setMetadata] = useState<CSVMetadata | null>(null);\n  const [selectedColumn, setSelectedColumn] = useState<string | null>(null);\n  const [visualizations, setVisualizations] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [fullScreen, setFullScreen] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchMetadata = async () => {\n      if (!selectedFileId) return;\n      \n      try {\n        setLoading(true);\n        setError(null);\n        const result = await getFileMetadata(selectedFileId);\n        setMetadata(result);\n        \n        // Auto-select the first numerical column\n        const numericalColumns = Object.entries(result.dtypes)\n          .filter(([_, type]) => type.includes('int') || type.includes('float'))\n          .map(([col, _]) => col);\n        \n        if (numericalColumns.length > 0) {\n          setSelectedColumn(numericalColumns[0]);\n        } else if (result.columns.length > 0) {\n          setSelectedColumn(result.columns[0]);\n        }\n      } catch (err: any) {\n        console.error('Error fetching metadata:', err);\n        const errorMessage = err.userMessage || \n          'Failed to load file metadata. Please check if the backend server is running.';\n        setError(errorMessage);\n        setMetadata(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchMetadata();\n  }, [selectedFileId]);\n\n  useEffect(() => {\n    if (selectedFileId && selectedColumn) {\n      fetchVisualizations(selectedFileId, selectedColumn);\n    } else {\n      setVisualizations(null);\n    }\n  }, [selectedFileId, selectedColumn]);\n\n  const fetchVisualizations = async (fileId: string, column: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await getColumnVisualization(fileId, column);\n      setVisualizations(data);\n    } catch (err: any) {\n      console.error('Error loading visualizations:', err);\n      const errorMessage = err.userMessage || \n        'Failed to load column visualization. Please check if the backend server is running.';\n      setError(errorMessage);\n      setVisualizations(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    if (selectedFileId && selectedColumn) {\n      fetchVisualizations(selectedFileId, selectedColumn);\n    }\n  };\n\n  const toggleFullScreen = () => {\n    setFullScreen(!fullScreen);\n  };\n\n  if (loading && !visualizations && !metadata) {\n    return (\n      <div className=\"animate-pulse space-y-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"h-8 bg-gray-100 rounded w-1/3\"></div>\n          <div className=\"h-8 bg-gray-100 rounded w-32\"></div>\n        </div>\n        <div className=\"h-80 bg-gray-100 rounded w-full\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-100 rounded-lg p-6 text-center\">\n        <div className=\"flex flex-col items-center\">\n          <ExclamationTriangleIcon className=\"h-12 w-12 text-red-500 mb-4\" />\n          <h3 className=\"text-lg font-medium text-red-800 mb-2\">Error Loading Visualization Data</h3>\n          <p className=\"text-red-700 mb-4\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200 flex items-center\"\n          >\n            <ArrowPathIcon className=\"h-5 w-5 mr-1\" />\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!metadata || !selectedColumn) {\n    return null;\n  }\n\n  const isNumerical = metadata.dtypes[selectedColumn]?.includes('int') || \n                      metadata.dtypes[selectedColumn]?.includes('float');\n\n  // Classification of different column types for better visualization guidance\n  const getColumnTypeInfo = () => {\n    if (isNumerical) {\n      return {\n        type: 'numerical',\n        icon: <ChartBarIcon className=\"h-5 w-5 text-blue-500\" />,\n        label: 'Numerical Data',\n        description: 'This column contains numerical values. Histograms and box plots are available.'\n      };\n    } else {\n      const uniqueCount = visualizations?.barplot?.data[0]?.x?.length || 0;\n      if (uniqueCount > 15) {\n        return {\n          type: 'high-cardinality',\n          icon: <ChartPieIcon className=\"h-5 w-5 text-orange-500\" />,\n          label: 'High Cardinality',\n          description: `This column has ${uniqueCount} unique values, which is high. Consider using a different column for clearer visualizations.`\n        };\n      } else {\n        return {\n          type: 'categorical',\n          icon: <ChartPieIcon className=\"h-5 w-5 text-green-500\" />,\n          label: 'Categorical Data',\n          description: 'This column contains categorical values. Bar chart distribution is available.'\n        };\n      }\n    }\n  };\n\n  const columnTypeInfo = getColumnTypeInfo();\n\n  return (\n    <div className={`${fullScreen ? 'fixed inset-0 bg-white p-4 z-50 overflow-auto' : ''}`}>\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h2 className=\"text-lg font-medium text-gray-900\">Column Visualizations</h2>\n          <p className=\"text-sm text-gray-500 mt-1\">\n            Explore and analyze data in each column\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button \n            onClick={handleRefresh} \n            className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n            title=\"Refresh visualization\"\n          >\n            <ArrowPathIcon className=\"h-5 w-5\" />\n          </button>\n          <button \n            onClick={toggleFullScreen} \n            className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n            title={fullScreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n          >\n            <ArrowsPointingOutIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"mb-6 flex flex-col md:flex-row md:items-center gap-4\">\n        <div className=\"flex-1\">\n          <label htmlFor=\"column-select\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Select column to visualize:\n          </label>\n          <div className=\"relative\">\n            <select\n              id=\"column-select\"\n              value={selectedColumn}\n              onChange={(e) => setSelectedColumn(e.target.value)}\n              className=\"block w-full border border-gray-300 rounded-md shadow-sm p-2 pr-10 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n            >\n              {metadata.columns.map((column) => (\n                <option key={column} value={column}>\n                  {column} ({metadata.dtypes[column].replace('64', '')})\n                </option>\n              ))}\n            </select>\n            <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n              <ChartBarIcon className=\"h-4 w-4 text-gray-400\" />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-gray-50 rounded-lg p-3 flex items-start flex-shrink-0 md:w-72\">\n          {columnTypeInfo.icon}\n          <div className=\"ml-2\">\n            <h4 className=\"text-sm font-medium text-gray-900\">{columnTypeInfo.label}</h4>\n            <p className=\"text-xs text-gray-500\">{columnTypeInfo.description}</p>\n          </div>\n        </div>\n      </div>\n      \n      {loading && (\n        <div className=\"animate-pulse\">\n          <div className=\"h-80 bg-gray-100 rounded-lg w-full\"></div>\n        </div>\n      )}\n      \n      {!loading && visualizations && (\n        <div className=\"space-y-8\">\n          {isNumerical ? (\n            <>\n              {visualizations.histogram && (\n                <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden\">\n                  <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">Histogram</h3>\n                    <div className=\"flex items-center\">\n                      <div className=\"group relative\">\n                        <button className=\"p-1.5 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-700\">\n                          <QuestionMarkCircleIcon className=\"h-5 w-5\" />\n                        </button>\n                        <div className=\"absolute right-0 top-full mt-2 w-64 rounded-lg bg-gray-800 text-white text-xs px-3 py-2 shadow-lg hidden group-hover:block z-10\">\n                          A histogram shows the distribution of values in a numerical column, grouped into bins. \n                          The x-axis represents the value ranges and the y-axis shows the frequency (count) of values.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"p-4\">\n                    <Plot\n                      data={visualizations.histogram.data}\n                      layout={{\n                        ...visualizations.histogram.layout,\n                        autosize: true,\n                        height: 400,\n                        margin: { l: 50, r: 20, t: 30, b: 50 },\n                        modebar: { orientation: 'v' },\n                        xaxis: {\n                          ...visualizations.histogram.layout.xaxis,\n                          title: selectedColumn\n                        },\n                        yaxis: {\n                          ...visualizations.histogram.layout.yaxis,\n                          title: 'Frequency'\n                        }\n                      }}\n                      config={{ \n                        responsive: true,\n                        displayModeBar: true,\n                        displaylogo: false,\n                        modeBarButtonsToRemove: ['lasso2d', 'select2d', 'sendDataToCloud']\n                      }}\n                      style={{ width: '100%', height: '100%' }}\n                    />\n                  </div>\n                </div>\n              )}\n              \n              {visualizations.boxplot && (\n                <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden\">\n                  <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">Box Plot</h3>\n                    <div className=\"flex items-center\">\n                      <div className=\"group relative\">\n                        <button className=\"p-1.5 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-700\">\n                          <QuestionMarkCircleIcon className=\"h-5 w-5\" />\n                        </button>\n                        <div className=\"absolute right-0 top-full mt-2 w-64 rounded-lg bg-gray-800 text-white text-xs px-3 py-2 shadow-lg hidden group-hover:block z-10\">\n                          A box plot shows the distribution of a numerical column with a box showing the quartiles (25%, median, 75%) \n                          and whiskers extending to the min/max values (excluding outliers). Outliers are shown as individual points.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"p-4\">\n                    <Plot\n                      data={visualizations.boxplot.data}\n                      layout={{\n                        ...visualizations.boxplot.layout,\n                        autosize: true,\n                        height: 400,\n                        margin: { l: 50, r: 20, t: 30, b: 50 },\n                        xaxis: {\n                          title: '',\n                          zeroline: false\n                        },\n                        yaxis: {\n                          ...visualizations.boxplot.layout.yaxis,\n                          title: selectedColumn\n                        }\n                      }}\n                      config={{ \n                        responsive: true,\n                        displayModeBar: true,\n                        displaylogo: false,\n                        modeBarButtonsToRemove: ['lasso2d', 'select2d', 'sendDataToCloud']\n                      }}\n                      style={{ width: '100%', height: '100%' }}\n                    />\n                  </div>\n                </div>\n              )}\n            </>\n          ) : (\n            <>\n              {visualizations.barplot && (\n                <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden\">\n                  <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">Category Distribution</h3>\n                    <div className=\"flex items-center\">\n                      <div className=\"group relative\">\n                        <button className=\"p-1.5 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-700\">\n                          <QuestionMarkCircleIcon className=\"h-5 w-5\" />\n                        </button>\n                        <div className=\"absolute right-0 top-full mt-2 w-64 rounded-lg bg-gray-800 text-white text-xs px-3 py-2 shadow-lg hidden group-hover:block z-10\">\n                          This bar chart shows the distribution of categories in this column. \n                          The x-axis shows each unique value and the y-axis shows how many times each value appears in the dataset.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"p-4\">\n                    <Plot\n                      data={visualizations.barplot.data}\n                      layout={{\n                        ...visualizations.barplot.layout,\n                        autosize: true,\n                        height: 400,\n                        margin: { l: 50, r: 20, t: 30, b: 100 },\n                        xaxis: {\n                          ...visualizations.barplot.layout.xaxis,\n                          title: selectedColumn,\n                          tickangle: visualizations.barplot.data[0].x.length > 5 ? -45 : 0\n                        },\n                        yaxis: {\n                          ...visualizations.barplot.layout.yaxis,\n                          title: 'Count'\n                        }\n                      }}\n                      config={{ \n                        responsive: true,\n                        displayModeBar: true,\n                        displaylogo: false,\n                        modeBarButtonsToRemove: ['lasso2d', 'select2d', 'sendDataToCloud']\n                      }}\n                      style={{ width: '100%', height: '100%' }}\n                    />\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      )}\n      \n      {fullScreen && (\n        <div className=\"fixed bottom-4 right-4\">\n          <button\n            onClick={toggleFullScreen}\n            className=\"bg-gray-800 text-white px-4 py-2 rounded-md shadow-lg flex items-center\"\n          >\n            <ArrowsPointingOutIcon className=\"h-5 w-5 mr-2\" />\n            Exit Fullscreen\n          </button>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/components/CorrelationAnalysis.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useCSV } from '@/context/CSVContext';\nimport { getCorrelation, CorrelationData } from '@/services/api';\nimport dynamic from 'next/dynamic';\nimport { \n  ArrowsPointingOutIcon, \n  ArrowPathIcon,\n  ExclamationTriangleIcon,\n  QuestionMarkCircleIcon,\n  LightBulbIcon,\n  ChartBarSquareIcon\n} from '@heroicons/react/24/outline';\n\n// Import plotly dynamically to avoid SSR issues\nconst Plot = dynamic(() => import('react-plotly.js'), { ssr: false });\n\nexport default function CorrelationAnalysis() {\n  const { selectedFileId } = useCSV();\n  const [correlationData, setCorrelationData] = useState<CorrelationData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [fullScreen, setFullScreen] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [insights, setInsights] = useState<any>([]);\n\n  useEffect(() => {\n    if (selectedFileId) {\n      console.log(\"CorrelationAnalysis: Selected file ID:\", selectedFileId);\n      // Add a small delay to ensure context is fully initialized\n      const timer = setTimeout(() => {\n        fetchCorrelationData(selectedFileId);\n      }, 500);\n      return () => clearTimeout(timer);\n    } else {\n      setCorrelationData(null);\n      console.log(\"CorrelationAnalysis: No file ID selected\");\n    }\n  }, [selectedFileId]);\n\n  const fetchCorrelationData = async (fileId: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      if (!fileId) {\n        console.error(\"Cannot fetch correlation data: No file ID provided\");\n        setError(\"No file selected. Please select a CSV file first.\");\n        setLoading(false);\n        return;\n      }\n      \n      console.log(`Fetching correlation data for file ID: ${fileId}`);\n      const data = await getCorrelation(fileId);\n      console.log(\"Correlation data received:\", data);\n      \n      // Validate correlation data structure\n      if (!data || (!data.correlations && !data.message)) {\n        console.error(\"Invalid correlation data received:\", data);\n        setError(\"The correlation data received from the server is invalid.\");\n        setCorrelationData(null);\n        setLoading(false);\n        return;\n      }\n      \n      setCorrelationData(data);\n      \n      // Extract insights from the correlation data\n      if (data && data.correlations) {\n        setInsights(findInsights(data.correlations));\n      }\n    } catch (err: any) {\n      console.error('Error fetching correlation data:', err);\n      const errorMessage = err.userMessage || \n        'Failed to load correlation data. Please ensure the backend server is running.';\n      console.error(`Correlation API error: ${errorMessage}`);\n      setError(errorMessage);\n      setCorrelationData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    if (selectedFileId) {\n      fetchCorrelationData(selectedFileId);\n    }\n  };\n\n  const toggleFullScreen = () => {\n    setFullScreen(!fullScreen);\n  };\n\n  // Find insights from correlation data\n  const findInsights = (correlations: any[]) => {\n    if (!correlations || !Array.isArray(correlations) || correlations.length === 0) {\n      console.log(\"No valid correlations data found for insights\");\n      return [];\n    }\n    \n    const insights = [];\n    \n    try {\n      // Filter out self-correlations and get absolute values\n      const filteredCorrelations = correlations\n        .filter(c => c && c.x && c.y && c.x !== c.y && typeof c.correlation === 'number')\n        .map(c => ({...c, absCorrelation: Math.abs(c.correlation)}));\n      \n      // Find strong correlations (positive and negative)\n      const strongPositiveCorrelations = filteredCorrelations\n        .filter(c => c.correlation > 0.7)\n        .sort((a, b) => b.correlation - a.correlation)\n        .slice(0, 3);\n        \n      const strongNegativeCorrelations = filteredCorrelations\n        .filter(c => c.correlation < -0.7)\n        .sort((a, b) => a.correlation - b.correlation)\n        .slice(0, 3);\n      \n      // Add insights for strong positive correlations\n      if (strongPositiveCorrelations.length > 0) {\n        insights.push({\n          type: 'positive',\n          title: 'Strong Positive Correlations',\n          description: 'These variables tend to increase together:',\n          correlations: strongPositiveCorrelations\n        });\n      }\n      \n      // Add insights for strong negative correlations\n      if (strongNegativeCorrelations.length > 0) {\n        insights.push({\n          type: 'negative',\n          title: 'Strong Negative Correlations', \n          description: 'As one variable increases, the other tends to decrease:',\n          correlations: strongNegativeCorrelations\n        });\n      }\n      \n      // Find variables with no strong correlations\n      const weaklyCorrelatedVars = new Set<string>();\n      \n      // Extract all unique column names\n      const allColumns = new Set<string>();\n      correlations.forEach(c => {\n        if (c && c.x && c.y) {\n          allColumns.add(c.x);\n          allColumns.add(c.y);\n        }\n      });\n      \n      // Check each column to see if it has any strong correlations\n      allColumns.forEach(columnName => {\n        const hasStrongCorrelation = filteredCorrelations\n          .some(c => (c.x === columnName || c.y === columnName) && Math.abs(c.correlation) > 0.4);\n        \n        if (!hasStrongCorrelation) {\n          weaklyCorrelatedVars.add(columnName);\n        }\n      });\n      \n      if (weaklyCorrelatedVars.size > 0) {\n        insights.push({\n          type: 'weak',\n          title: 'Independent Variables',\n          description: 'These variables show little correlation with others:',\n          variables: Array.from(weaklyCorrelatedVars)\n        });\n      }\n    } catch (error) {\n      console.error(\"Error generating insights:\", error);\n    }\n    \n    return insights;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"animate-pulse space-y-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"h-8 bg-gray-100 rounded w-1/3\"></div>\n          <div className=\"h-8 bg-gray-100 rounded w-32\"></div>\n        </div>\n        <div className=\"h-80 bg-gray-100 rounded w-full\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-100 rounded-lg p-6 text-center\">\n        <div className=\"flex flex-col items-center\">\n          <ExclamationTriangleIcon className=\"h-12 w-12 text-red-500 mb-4\" />\n          <h3 className=\"text-lg font-medium text-red-800 mb-2\">Error Loading Correlation Data</h3>\n          <p className=\"text-red-700 mb-4\">{error}</p>\n          <button\n            onClick={handleRefresh}\n            className=\"px-4 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200 flex items-center\"\n          >\n            <ArrowPathIcon className=\"h-5 w-5 mr-1\" />\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!correlationData) {\n    return null;\n  }\n\n  if (correlationData.message) {\n    return (\n      <div className=\"bg-yellow-50 border border-yellow-100 text-yellow-700 p-4 rounded-md flex items-start\">\n        <ExclamationTriangleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n        <div>\n          <h3 className=\"font-medium\">Correlation Analysis Unavailable</h3>\n          <p className=\"text-sm mt-1\">{correlationData.message}</p>\n          <p className=\"text-sm mt-1\">Try uploading a CSV file with at least two numerical columns.</p>\n        </div>\n      </div>\n    );\n  }\n  \n  // Check if visualization data exists\n  const hasVisualization = correlationData && \n                          correlationData.visualization && \n                          correlationData.visualization.data &&\n                          correlationData.visualization.layout;\n  \n  // Check if correlations data exists\n  const hasCorrelations = correlationData && \n                         Array.isArray(correlationData.correlations) && \n                         correlationData.correlations.length > 0;\n  \n  if (!hasVisualization || !hasCorrelations) {\n    return (\n      <div className=\"bg-yellow-50 border border-yellow-100 text-yellow-700 p-4 rounded-md flex items-start\">\n        <ExclamationTriangleIcon className=\"h-5 w-5 mr-2 flex-shrink-0\" />\n        <div>\n          <h3 className=\"font-medium\">Correlation Analysis Incomplete</h3>\n          <p className=\"text-sm mt-1\">The correlation data is incomplete or in an incorrect format.</p>\n          <button \n            onClick={handleRefresh}\n            className=\"mt-2 inline-flex items-center px-2 py-1 text-xs font-medium rounded text-yellow-700 bg-yellow-100 hover:bg-yellow-200\"\n          >\n            <ArrowPathIcon className=\"h-3 w-3 mr-1\" />\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className={`${fullScreen ? 'fixed inset-0 bg-white p-4 z-50 overflow-auto' : ''}`}>\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h2 className=\"text-lg font-medium text-gray-900\">Correlation Analysis</h2>\n          <p className=\"text-sm text-gray-500 mt-1\">\n            Explore relationships between numerical variables\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button \n            onClick={handleRefresh} \n            className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n            title=\"Refresh correlation analysis\"\n          >\n            <ArrowPathIcon className=\"h-5 w-5\" />\n          </button>\n          <button \n            onClick={toggleFullScreen} \n            className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n            title={fullScreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n          >\n            <ArrowsPointingOutIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden mb-8\">\n        <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Correlation Heatmap</h3>\n          <div className=\"flex items-center\">\n            <div className=\"group relative\">\n              <button className=\"p-1.5 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-700\">\n                <QuestionMarkCircleIcon className=\"h-5 w-5\" />\n              </button>\n              <div className=\"absolute right-0 top-full mt-2 w-72 rounded-lg bg-gray-800 text-white text-xs px-3 py-2 shadow-lg hidden group-hover:block z-10\">\n                This heatmap shows the Pearson correlation coefficients between numerical columns. \n                Values range from -1 (perfect negative correlation) to +1 (perfect positive correlation),\n                with 0 indicating no linear correlation. Hover over cells to see exact values.\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"p-4\">\n          <div className=\"border border-gray-100 rounded-lg overflow-hidden\">\n            <Plot\n              data={correlationData.visualization.data}\n              layout={{\n                ...correlationData.visualization.layout,\n                autosize: true,\n                height: 500,\n                margin: { l: 100, r: 40, t: 40, b: 100 }, // Increased margins to prevent overlap\n                font: { size: 10 }, // Smaller font size for labels\n                xaxis: {\n                  ...correlationData.visualization.layout.xaxis,\n                  tickangle: -45, // Angled labels to prevent overlap\n                },\n                yaxis: {\n                  ...correlationData.visualization.layout.yaxis,\n                  tickangle: 0, // Horizontal labels for y-axis\n                }\n              }}\n              config={{ \n                responsive: true,\n                displayModeBar: true,\n                displaylogo: false,\n                modeBarButtonsToRemove: ['lasso2d', 'select2d', 'sendDataToCloud']\n              }}\n              style={{ width: '100%', height: '100%' }}\n            />\n          </div>\n          \n          <div className=\"mt-2 text-center\">\n            <div className=\"inline-flex items-center justify-center space-x-1 mt-2\">\n              <div className=\"h-3 w-4 bg-blue-700\"></div>\n              <div className=\"h-3 w-4 bg-blue-500\"></div>\n              <div className=\"h-3 w-4 bg-blue-300\"></div>\n              <div className=\"h-3 w-4 bg-gray-200\"></div>\n              <div className=\"h-3 w-4 bg-red-300\"></div>\n              <div className=\"h-3 w-4 bg-red-500\"></div>\n              <div className=\"h-3 w-4 bg-red-700\"></div>\n            </div>\n            <div className=\"flex items-center justify-center text-xs text-gray-500 mt-1\">\n              <span>-1</span>\n              <div className=\"mx-2 flex-1\"></div>\n              <span>0</span>\n              <div className=\"mx-2 flex-1\"></div>\n              <span>+1</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Correlation Insights */}\n      {insights.length > 0 && (\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <LightBulbIcon className=\"h-5 w-5 text-yellow-500 mr-2\" />\n            <h3 className=\"text-lg font-medium text-gray-900\">Insights</h3>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {insights.map((insight, idx) => (\n              <div \n                key={idx} \n                className={`border rounded-lg overflow-hidden shadow-sm ${\n                  insight.type === 'positive' \n                    ? 'border-green-100 bg-green-50' \n                    : insight.type === 'negative'\n                      ? 'border-red-100 bg-red-50'\n                      : 'border-gray-100 bg-gray-50'\n                }`}\n              >\n                <div className={`border-b px-4 py-3 ${\n                  insight.type === 'positive' \n                    ? 'border-green-100 bg-green-100/60' \n                    : insight.type === 'negative'\n                      ? 'border-red-100 bg-red-100/60'\n                      : 'border-gray-100 bg-gray-100/60'\n                }`}>\n                  <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\n                </div>\n                <div className=\"p-4\">\n                  <p className=\"text-sm text-gray-600 mb-2\">{insight.description}</p>\n                  \n                  {insight.correlations && Array.isArray(insight.correlations) && insight.correlations.length > 0 && (\n                    <div className=\"space-y-2\">\n                      {insight.correlations.map((corr, i) => (\n                        <div key={i} className=\"bg-white rounded-md border border-gray-100 p-2 text-sm\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"font-medium\">{corr.x} ↔ {corr.y}</span>\n                            <span className={`px-2 py-0.5 rounded-full text-xs font-medium ${\n                              corr.correlation > 0 \n                                ? 'bg-green-100 text-green-800' \n                                : 'bg-red-100 text-red-800'\n                            }`}>\n                              {typeof corr.correlation === 'number' ? corr.correlation.toFixed(2) : 'N/A'}\n                            </span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {insight.variables && Array.isArray(insight.variables) && insight.variables.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {insight.variables.map((variable, i) => (\n                        <span key={i} className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n                          {variable}\n                        </span>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      \n      {/* Table of Strong Correlations */}\n      <div className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden\">\n        <div className=\"border-b border-gray-100 p-4 flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <ChartBarSquareIcon className=\"h-5 w-5 text-gray-500 mr-2\" />\n            <h3 className=\"text-lg font-medium text-gray-900\">Strongest Correlations</h3>\n          </div>\n        </div>\n        \n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Column 1\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Column 2\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Correlation\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Strength\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Relationship\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {correlationData.correlations\n                .filter(c => c && c.x && c.y && c.x !== c.y && typeof c.correlation === 'number') // Remove invalid or self-correlations\n                .sort((a, b) => Math.abs(b.correlation) - Math.abs(a.correlation)) // Sort by absolute value\n                .slice(0, 8) // Take top 8\n                .map((corr, index) => (\n                  <tr key={index} className=\"hover:bg-gray-50\">\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {corr.x}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {corr.y}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                      <span className={`font-medium ${\n                        corr.correlation > 0.2 \n                          ? 'text-green-600' \n                          : corr.correlation < -0.2 \n                            ? 'text-red-600' \n                            : 'text-gray-500'\n                      }`}>\n                        {corr.correlation.toFixed(3)}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                      <span\n                        className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          Math.abs(corr.correlation) > 0.7\n                            ? 'bg-blue-100 text-blue-800'\n                            : Math.abs(corr.correlation) > 0.4\n                            ? 'bg-green-100 text-green-800'\n                            : 'bg-gray-100 text-gray-800'\n                        }`}\n                      >\n                        {Math.abs(corr.correlation) > 0.7\n                          ? 'Strong'\n                          : Math.abs(corr.correlation) > 0.4\n                          ? 'Moderate'\n                          : 'Weak'}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500\">\n                      {corr.correlation > 0 \n                        ? 'When one increases, the other increases' \n                        : 'When one increases, the other decreases'}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      \n      {fullScreen && (\n        <div className=\"fixed bottom-4 right-4\">\n          <button\n            onClick={toggleFullScreen}\n            className=\"bg-gray-800 text-white px-4 py-2 rounded-md shadow-lg flex items-center\"\n          >\n            <ArrowsPointingOutIcon className=\"h-5 w-5 mr-2\" />\n            Exit Fullscreen\n          </button>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2630, "column": 0}, "map": {"version":3,"sources":["file:///Users/arjohncapucion/Documents/dashboard-project/frontend/src/app/csv/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport DataPreview from '@/components/DataPreview';\nimport ColumnVisualizations from '@/components/ColumnVisualizations';\nimport CorrelationAnalysis from '@/components/CorrelationAnalysis';\nimport { useCSV } from '@/context/CSVContext';\nimport dynamic from 'next/dynamic';\nimport { \n  ChartBarIcon, \n  TableCellsIcon, \n  ArrowsRightLeftIcon,\n  DocumentTextIcon,\n  UserCircleIcon,\n  HomeIcon,\n  ArrowLeftOnRectangleIcon,\n  ArrowLeftIcon,\n  DocumentDuplicateIcon,\n  ClockIcon,\n  InformationCircleIcon,\n  ShareIcon,\n  TrashIcon,\n  PresentationChartLineIcon,\n  ChartPieIcon,\n  AdjustmentsHorizontalIcon,\n  DocumentChartBarIcon,\n  Squares2X2Icon,\n  ChevronDownIcon,\n  ArrowsPointingOutIcon,\n  ArrowPathIcon,\n  ViewColumnsIcon,\n  ExclamationTriangleIcon\n} from '@heroicons/react/24/outline';\nimport { getFileStats, getFileMetadata } from '@/services/api';\n\n// Import plotly dynamically to avoid SSR issues\nconst Plot = dynamic(() => import('react-plotly.js'), { ssr: false });\n\nexport default function CSVDetailPage({ params }: { params: { id: string } }) {\n  // Unwrap params using React.use()\n  const unwrappedParams = React.use(params);\n  const fileId = unwrappedParams.id;\n  \n  const router = useRouter();\n  const { selectFile, selectedFileId, files, loading } = useCSV();\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'data' | 'visualizations' | 'correlation'>('dashboard');\n  const [userName, setUserName] = useState<string>('User');\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [fileDetails, setFileDetails] = useState<any>(null);\n  const [metadata, setMetadata] = useState<any>(null);\n  const [stats, setStats] = useState<any>(null);\n  const [summaryCharts, setSummaryCharts] = useState<any>([]);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [expandedCard, setExpandedCard] = useState<string | null>(null);\n  const [apiError, setApiError] = useState<string | null>(null);\n\n  // Check if user is logged in\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\n    if (!isLoggedIn) {\n      router.push('/login');\n      return;\n    }\n    \n    // For demo: set a random user name \n    const names = ['Alex', 'Jordan', 'Taylor', 'Morgan', 'Casey'];\n    setUserName(names[Math.floor(Math.random() * names.length)]);\n    \n    // Set selected file ID based on the URL param\n    if (fileId) {\n      console.log(`CSV Detail Page: Setting file ID from URL parameter: ${fileId}`);\n      \n      // Check if fileId is different from currently selected file\n      if (fileId !== selectedFileId) {\n        console.log(`CSV Detail Page: Updating selected file ID from ${selectedFileId} to ${fileId}`);\n        selectFile(fileId);\n      } else {\n        console.log(`CSV Detail Page: File ID ${fileId} already selected`);\n      }\n    } else {\n      console.error(\"CSV Detail Page: No file ID in URL parameters\");\n    }\n  }, [fileId, router, selectFile, selectedFileId]);\n\n  // Set file details from the files list\n  useEffect(() => {\n    if (files && files.length > 0 && fileId) {\n      const file = files.find(f => f.file_id === fileId);\n      if (file) {\n        setFileDetails(file);\n      }\n    }\n  }, [files, fileId]);\n\n  // Load file metadata and stats when the file is selected\n  useEffect(() => {\n    if (selectedFileId) {\n      loadData(selectedFileId);\n    }\n  }, [selectedFileId]);\n\n  const loadData = async (fileId: string) => {\n    try {\n      setDataLoading(true);\n      setApiError(null);\n      \n      try {\n        const metadataResult = await getFileMetadata(fileId);\n        const statsResult = await getFileStats(fileId);\n        \n        setMetadata(metadataResult);\n        setStats(statsResult);\n        \n        // Generate summary charts based on the data\n        generateSummaryCharts(metadataResult, statsResult);\n      } catch (error: any) {\n        console.error('Error loading data:', error);\n        const errorMessage = error.userMessage || \n          'Failed to load data. Please check if the backend server is running.';\n        setApiError(errorMessage);\n      }\n    } finally {\n      setDataLoading(false);\n    }\n  };\n\n  const generateSummaryCharts = (metadata: any, stats: any) => {\n    if (!metadata || !stats || !stats.columns) return;\n    \n    const charts = [];\n    \n    // Data completeness chart\n    const completenessData = {\n      labels: stats.columns.map((col: any) => col.name),\n      values: stats.columns.map((col: any) => col.missing_pct),\n      type: 'bar',\n      marker: {\n        color: stats.columns.map((col: any) => \n          col.missing_pct > 20 ? '#f87171' : \n          col.missing_pct > 5 ? '#fbbf24' : '#34d399'\n        )\n      }\n    };\n    \n    charts.push({\n      id: 'completeness',\n      title: 'Data Completeness',\n      icon: <InformationCircleIcon className=\"h-5 w-5 text-blue-500\" />,\n      description: 'Percentage of missing values by column',\n      plot: {\n        data: [completenessData],\n        layout: {\n          autosize: true,\n          height: 250,\n          margin: { l: 50, r: 20, t: 30, b: 100 },\n          xaxis: {\n            tickangle: -45,\n            title: ''\n          },\n          yaxis: {\n            title: 'Missing %',\n            range: [0, 100]\n          }\n        }\n      }\n    });\n    \n    // Find numerical columns for distribution summary\n    const numericalColumns = stats.columns.filter((col: any) => \n      col.dtype.includes('int') || col.dtype.includes('float')\n    ).slice(0, 3); // Take up to 3 numerical columns\n    \n    if (numericalColumns.length > 0) {\n      const distributionData = numericalColumns.map((col: any) => ({\n        name: col.name,\n        values: metadata.preview.map((row: any) => row[col.name]).filter((val: any) => val !== null && !isNaN(val)),\n        type: 'box',\n        boxpoints: 'suspectedoutliers'\n      }));\n      \n      charts.push({\n        id: 'distributions',\n        title: 'Key Distributions',\n        icon: <ChartBarIcon className=\"h-5 w-5 text-purple-500\" />,\n        description: 'Box plots of numerical columns',\n        plot: {\n          data: distributionData,\n          layout: {\n            autosize: true,\n            height: 250,\n            margin: { l: 50, r: 20, t: 30, b: 50 },\n            yaxis: {\n              title: ''\n            }\n          }\n        }\n      });\n    }\n    \n    // Get categorical column for pie chart\n    const categoricalColumns = stats.columns.filter((col: any) => \n      !col.dtype.includes('int') && !col.dtype.includes('float') && col.unique < 10\n    ).slice(0, 1); // Take the first suitable categorical column\n    \n    if (categoricalColumns.length > 0) {\n      const catCol = categoricalColumns[0];\n      \n      // Count value occurrences\n      const valueCounts: Record<string, number> = {};\n      metadata.preview.forEach((row: any) => {\n        const val = String(row[catCol.name]);\n        valueCounts[val] = (valueCounts[val] || 0) + 1;\n      });\n      \n      // Convert to arrays for Plotly\n      const labels = Object.keys(valueCounts);\n      const values = Object.values(valueCounts);\n      \n      charts.push({\n        id: 'categoryBreakdown',\n        title: `${catCol.name} Breakdown`,\n        icon: <ChartPieIcon className=\"h-5 w-5 text-green-500\" />,\n        description: 'Distribution of categories',\n        plot: {\n          data: [{\n            labels,\n            values,\n            type: 'pie',\n            textinfo: 'percent',\n            insidetextorientation: 'radial'\n          }],\n          layout: {\n            autosize: true,\n            height: 250,\n            margin: { l: 20, r: 20, t: 30, b: 20 },\n            showlegend: true,\n            legend: {\n              orientation: 'h',\n              y: -0.2\n            }\n          }\n        }\n      });\n    }\n    \n    // Add a preview of correlation heatmap if we have numerical columns\n    if (numericalColumns.length > 1) {\n      // Create a simplified correlation matrix for preview\n      const corrMatrix: number[][] = [];\n      const corrLabels = numericalColumns.map((col: any) => col.name);\n      \n      // Create a dummy correlation matrix for preview (would be replaced with real data)\n      for (let i = 0; i < corrLabels.length; i++) {\n        corrMatrix[i] = [];\n        for (let j = 0; j < corrLabels.length; j++) {\n          if (i === j) {\n            corrMatrix[i][j] = 1; // Perfect correlation with self\n          } else {\n            // Generate a random correlation value between -1 and 1 for preview\n            corrMatrix[i][j] = Math.round((Math.random() * 2 - 1) * 100) / 100;\n          }\n        }\n      }\n      \n      charts.push({\n        id: 'correlationPreview',\n        title: 'Correlation Preview',\n        icon: <ArrowsRightLeftIcon className=\"h-5 w-5 text-red-500\" />,\n        description: 'Preview of correlations between numerical columns',\n        plot: {\n          data: [{\n            z: corrMatrix,\n            x: corrLabels,\n            y: corrLabels,\n            type: 'heatmap',\n            colorscale: 'RdBu',\n            zmin: -1,\n            zmax: 1\n          }],\n          layout: {\n            autosize: true,\n            height: 250,\n            margin: { l: 50, r: 20, t: 30, b: 50 }\n          }\n        }\n      });\n    }\n    \n    setSummaryCharts(charts);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('isLoggedIn');\n    router.push('/');\n  };\n\n  const formatDate = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    } catch (e) {\n      return dateString;\n    }\n  };\n\n  const toggleCardExpansion = (cardId: string) => {\n    if (expandedCard === cardId) {\n      setExpandedCard(null);\n    } else {\n      setExpandedCard(cardId);\n    }\n  };\n\n  if (loading || !fileDetails) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  if (apiError) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n        <header className=\"bg-white shadow-sm sticky top-0 z-10\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <ChartBarIcon className=\"h-8 w-8 text-blue-600\" />\n                <h1 className=\"ml-2 text-xl font-bold text-gray-900\">CSV Analytics Dashboard</h1>\n              </div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"relative\">\n                  <button \n                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                    className=\"flex items-center text-gray-700 hover:text-gray-900 focus:outline-none\"\n                  >\n                    <UserCircleIcon className=\"h-8 w-8 text-gray-400\" />\n                    <span className=\"ml-2 mr-1 text-sm font-medium\">{userName}</span>\n                    <svg className=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </button>\n                  \n                  {isMenuOpen && (\n                    <div className=\"absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\n                      <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                        <a href=\"/\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\">\n                          <HomeIcon className=\"h-4 w-4 mr-2\" />\n                          Home\n                        </a>\n                        <button \n                          onClick={handleLogout}\n                          className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"\n                        >\n                          <ArrowLeftOnRectangleIcon className=\"h-4 w-4 mr-2\" />\n                          Sign out\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </header>\n        <main className=\"flex-1 flex items-center justify-center\">\n          <div className=\"max-w-lg p-6 bg-white rounded-lg shadow-md border border-red-100\">\n            <div className=\"flex items-center text-red-600 mb-4\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <h2 className=\"text-xl font-semibold\">Connection Error</h2>\n            </div>\n            <p className=\"mb-4 text-gray-700\">{apiError}</p>\n            <div className=\"flex justify-between\">\n              <button\n                onClick={() => loadData(fileId)}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n              >\n                Try Again\n              </button>\n              <Link\n                href=\"/dashboard\"\n                className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 transition-colors\"\n              >\n                Return to Dashboard\n              </Link>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      <header className=\"bg-white shadow-sm sticky top-0 z-10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <ChartBarIcon className=\"h-8 w-8 text-blue-600\" />\n              <h1 className=\"ml-2 text-xl font-bold text-gray-900\">CSV Analytics Dashboard</h1>\n            </div>\n            \n            <div className=\"flex items-center\">\n              <div className=\"relative\">\n                <button \n                  onClick={() => setIsMenuOpen(!isMenuOpen)}\n                  className=\"flex items-center text-gray-700 hover:text-gray-900 focus:outline-none\"\n                >\n                  <UserCircleIcon className=\"h-8 w-8 text-gray-400\" />\n                  <span className=\"ml-2 mr-1 text-sm font-medium\">{userName}</span>\n                  <svg className=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n                \n                {isMenuOpen && (\n                  <div className=\"absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\n                    <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                      <a href=\"/\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\">\n                        <HomeIcon className=\"h-4 w-4 mr-2\" />\n                        Home\n                      </a>\n                      <button \n                        onClick={handleLogout}\n                        className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"\n                      >\n                        <ArrowLeftOnRectangleIcon className=\"h-4 w-4 mr-2\" />\n                        Sign out\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\n          {/* Back button and file name header */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center\">\n              <Link\n                href=\"/dashboard\"\n                className=\"mr-4 inline-flex items-center px-3 py-1.5 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n              >\n                <ArrowLeftIcon className=\"h-4 w-4 mr-1\" />\n                Back to Dashboard\n              </Link>\n              <div className=\"flex items-center\">\n                <DocumentTextIcon className=\"h-6 w-6 text-blue-600 mr-2\" />\n                <h1 className=\"text-2xl font-bold text-gray-900 truncate max-w-xs sm:max-w-sm md:max-w-md lg:max-w-lg\" title={fileDetails.filename}>\n                  {fileDetails.filename}\n                </h1>\n              </div>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                <DocumentDuplicateIcon className=\"h-4 w-4 mr-1\" />\n                Copy\n              </button>\n              <button className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                <ShareIcon className=\"h-4 w-4 mr-1\" />\n                Share\n              </button>\n              <button className=\"inline-flex items-center px-3 py-1.5 border border-red-300 shadow-sm text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50\">\n                <TrashIcon className=\"h-4 w-4 mr-1\" />\n                Delete\n              </button>\n            </div>\n          </div>\n          \n          {/* File information card */}\n          <div className=\"bg-white rounded-lg shadow-sm overflow-hidden border border-gray-100 mb-6\">\n            <div className=\"p-5 border-b border-gray-100\">\n              <div className=\"flex items-center\">\n                <InformationCircleIcon className=\"h-5 w-5 text-gray-500 mr-2\" />\n                <h2 className=\"text-lg font-medium\">File Information</h2>\n              </div>\n            </div>\n            <div className=\"p-5\">\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6\">\n                <div>\n                  <div className=\"text-sm font-medium text-gray-500\">File Name</div>\n                  <div className=\"mt-1 text-sm text-gray-900 truncate\" title={fileDetails.filename}>\n                    {fileDetails.filename}\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-sm font-medium text-gray-500\">Upload Date</div>\n                  <div className=\"mt-1 text-sm text-gray-900 flex items-center truncate\" title={formatDate(fileDetails.upload_time)}>\n                    <ClockIcon className=\"h-4 w-4 mr-1 flex-shrink-0 text-gray-400\" />\n                    <span className=\"truncate\">{formatDate(fileDetails.upload_time)}</span>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-sm font-medium text-gray-500\">File Size</div>\n                  <div className=\"mt-1 text-sm text-gray-900 truncate\" title={fileDetails.size}>\n                    {fileDetails.size}\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-sm font-medium text-gray-500\">Dimensions</div>\n                  <div className=\"mt-1 text-sm text-gray-900 flex items-center truncate\" \n                       title={`${fileDetails.row_count.toLocaleString()} rows × ${fileDetails.column_count} columns`}>\n                    <ViewColumnsIcon className=\"h-4 w-4 mr-1 flex-shrink-0 text-gray-400\" />\n                    <span className=\"truncate\">{fileDetails.row_count.toLocaleString()} rows × {fileDetails.column_count} columns</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Tabs for different analyses */}\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden\">\n            <div className=\"flex border-b border-gray-100\">\n              <button\n                className={`flex items-center px-6 py-4 text-sm font-medium ${\n                  activeTab === 'dashboard' \n                    ? 'text-blue-600 border-b-2 border-blue-600' \n                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\n                }`}\n                onClick={() => setActiveTab('dashboard')}\n              >\n                <Squares2X2Icon className=\"h-5 w-5 mr-2\" />\n                Dashboard\n              </button>\n              <button\n                className={`flex items-center px-6 py-4 text-sm font-medium ${\n                  activeTab === 'data' \n                    ? 'text-blue-600 border-b-2 border-blue-600' \n                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\n                }`}\n                onClick={() => setActiveTab('data')}\n              >\n                <TableCellsIcon className=\"h-5 w-5 mr-2\" />\n                Data Preview\n              </button>\n              <button\n                className={`flex items-center px-6 py-4 text-sm font-medium ${\n                  activeTab === 'visualizations' \n                    ? 'text-blue-600 border-b-2 border-blue-600' \n                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\n                }`}\n                onClick={() => setActiveTab('visualizations')}\n              >\n                <ChartBarIcon className=\"h-5 w-5 mr-2\" />\n                Visualizations\n              </button>\n              <button\n                className={`flex items-center px-6 py-4 text-sm font-medium ${\n                  activeTab === 'correlation' \n                    ? 'text-blue-600 border-b-2 border-blue-600' \n                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\n                }`}\n                onClick={() => setActiveTab('correlation')}\n              >\n                <ArrowsRightLeftIcon className=\"h-5 w-5 mr-2\" />\n                Correlation\n              </button>\n            </div>\n            \n            {activeTab === 'dashboard' && (\n              <div className=\"p-6\">\n                <div className=\"mb-6\">\n                  <h2 className=\"text-xl font-medium text-gray-900 mb-2\">Data Summary Dashboard</h2>\n                  <p className=\"text-sm text-gray-500\">\n                    Quick overview of key metrics and insights from your CSV file\n                  </p>\n                </div>\n                \n                {dataLoading ? (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    {[1, 2, 3, 4].map((i) => (\n                      <div key={i} className=\"bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden animate-pulse\">\n                        <div className=\"px-4 py-3 border-b border-gray-100\">\n                          <div className=\"h-6 bg-gray-200 rounded w-1/3\"></div>\n                        </div>\n                        <div className=\"p-4\">\n                          <div className=\"h-40 bg-gray-100 rounded\"></div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <>\n                    {/* Key Metrics Cards */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n                      <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-lg shadow-sm p-5 border border-blue-100\">\n                        <h3 className=\"text-lg font-medium text-blue-800 mb-1\">Data Coverage</h3>\n                        <div className=\"flex items-end\">\n                          <span className=\"text-3xl font-bold text-blue-600\">\n                            {stats && stats.columns ? (\n                              `${(100 - stats.columns.reduce((sum: number, col: any) => sum + col.missing_pct, 0) / stats.columns.length).toFixed(1)}%`\n                            ) : '—'}\n                          </span>\n                          <span className=\"ml-2 text-blue-800 text-sm mb-1\">overall completeness</span>\n                        </div>\n                        <p className=\"text-xs text-blue-700 mt-2\">\n                          {stats && stats.columns && stats.columns.some((col: any) => col.missing > 0) ? \n                            `${stats.columns.filter((col: any) => col.missing > 0).length} columns have missing values` :\n                            'No missing values detected'\n                          }\n                        </p>\n                      </div>\n                      \n                      <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 rounded-lg shadow-sm p-5 border border-green-100\">\n                        <h3 className=\"text-lg font-medium text-green-800 mb-1\">Column Types</h3>\n                        <div className=\"flex items-center\">\n                          {stats && stats.columns ? (\n                            <>\n                              <div className=\"flex items-center mr-3\">\n                                <span className=\"inline-block w-3 h-3 bg-green-500 rounded-full mr-1\"></span>\n                                <span className=\"text-sm text-green-800\">\n                                  {stats.columns.filter((col: any) => col.dtype.includes('int') || col.dtype.includes('float')).length} Numeric\n                                </span>\n                              </div>\n                              <div className=\"flex items-center\">\n                                <span className=\"inline-block w-3 h-3 bg-indigo-500 rounded-full mr-1\"></span>\n                                <span className=\"text-sm text-green-800\">\n                                  {stats.columns.filter((col: any) => !col.dtype.includes('int') && !col.dtype.includes('float')).length} Categorical\n                                </span>\n                              </div>\n                            </>\n                          ) : '—'}\n                        </div>\n                        <p className=\"text-xs text-green-700 mt-2\">\n                          {metadata?.columns?.length || 0} total columns detected\n                        </p>\n                      </div>\n                      \n                      <div className=\"bg-gradient-to-br from-purple-50 to-fuchsia-50 rounded-lg shadow-sm p-5 border border-purple-100\">\n                        <h3 className=\"text-lg font-medium text-purple-800 mb-1\">Unique Values</h3>\n                        <div className=\"flex items-end\">\n                          {stats && stats.columns ? (\n                            <div className=\"w-full\">\n                              <div className=\"flex justify-between mb-1\">\n                                <span className=\"text-sm text-purple-800\">Most Unique</span>\n                                <span className=\"text-sm text-purple-800\">\n                                  {stats.columns.reduce((max: number, col: any) => Math.max(max, col.unique), 0).toLocaleString()}\n                                </span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-xs text-purple-700\">\n                                  {stats.columns.reduce((prev: any, current: any) => \n                                    (prev.unique > current.unique) ? prev : current, { unique: 0 }\n                                  ).name}\n                                </span>\n                                <span className=\"text-xs text-purple-700\">values</span>\n                              </div>\n                            </div>\n                          ) : '—'}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Charts Grid */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      {summaryCharts.map((chart: any) => (\n                        <div \n                          key={chart.id}\n                          className={`bg-white border border-gray-100 rounded-lg shadow-sm overflow-hidden transition-all duration-300 ${\n                            expandedCard === chart.id ? 'md:col-span-2' : ''\n                          }`}\n                        >\n                          <div className=\"px-4 py-3 border-b border-gray-100 flex justify-between items-center\">\n                            <div className=\"flex items-center\">\n                              {chart.icon}\n                              <h3 className=\"ml-2 font-medium text-gray-900\">{chart.title}</h3>\n                              <span className=\"ml-2 text-xs text-gray-500\">{chart.description}</span>\n                            </div>\n                            <div className=\"flex space-x-1\">\n                              <button \n                                onClick={() => toggleCardExpansion(chart.id)}\n                                className=\"p-1 rounded hover:bg-gray-100\"\n                                title={expandedCard === chart.id ? \"Collapse\" : \"Expand\"}\n                              >\n                                <ArrowsPointingOutIcon className=\"h-4 w-4 text-gray-500\" />\n                              </button>\n                            </div>\n                          </div>\n                          <div className=\"p-4\">\n                            <Plot\n                              data={chart.plot.data}\n                              layout={{\n                                ...chart.plot.layout,\n                                autosize: true,\n                                height: expandedCard === chart.id ? 400 : chart.plot.layout.height,\n                                margin: chart.plot.layout.margin,\n                                paper_bgcolor: 'rgba(0,0,0,0)',\n                                plot_bgcolor: 'rgba(0,0,0,0)',\n                                font: {\n                                  family: 'Inter, system-ui, sans-serif'\n                                }\n                              }}\n                              config={{ \n                                responsive: true,\n                                displayModeBar: expandedCard === chart.id,\n                                displaylogo: false,\n                                modeBarButtonsToRemove: ['lasso2d', 'select2d', 'sendDataToCloud']\n                              }}\n                              style={{ width: '100%', height: '100%' }}\n                            />\n                          </div>\n                        </div>\n                      ))}\n                      \n                      {/* Action Cards */}\n                      <div className=\"bg-gradient-to-br from-gray-50 to-gray-100 rounded-lg shadow-sm p-5 border border-gray-200\">\n                        <h3 className=\"text-lg font-medium text-gray-800 mb-3\">Recommendations</h3>\n                        <ul className=\"space-y-3\">\n                          {stats && stats.columns && stats.columns.some((col: any) => col.missing_pct > 20) && (\n                            <li className=\"flex items-start\">\n                              <div className=\"flex-shrink-0 p-1 bg-yellow-100 rounded-full\">\n                                <ExclamationTriangleIcon className=\"h-4 w-4 text-yellow-600\" />\n                              </div>\n                              <div className=\"ml-3\">\n                                <p className=\"text-sm text-gray-700\">\n                                  Consider handling missing values in{' '}\n                                  <span className=\"font-medium\">{stats.columns.filter((col: any) => col.missing_pct > 20)[0].name}</span>\n                                </p>\n                              </div>\n                            </li>\n                          )}\n                          \n                          {stats && stats.columns && stats.columns.filter((col: any) => col.dtype.includes('int') || col.dtype.includes('float')).length >= 2 && (\n                            <li className=\"flex items-start\">\n                              <div className=\"flex-shrink-0 p-1 bg-blue-100 rounded-full\">\n                                <ArrowsRightLeftIcon className=\"h-4 w-4 text-blue-600\" />\n                              </div>\n                              <div className=\"ml-3\">\n                                <p className=\"text-sm text-gray-700\">\n                                  Explore correlations between numerical columns\n                                </p>\n                                <button \n                                  onClick={() => setActiveTab('correlation')}\n                                  className=\"mt-1 text-xs text-blue-600 hover:text-blue-800\"\n                                >\n                                  Go to correlation analysis →\n                                </button>\n                              </div>\n                            </li>\n                          )}\n                          \n                          <li className=\"flex items-start\">\n                            <div className=\"flex-shrink-0 p-1 bg-green-100 rounded-full\">\n                              <DocumentChartBarIcon className=\"h-4 w-4 text-green-600\" />\n                            </div>\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm text-gray-700\">\n                                Create visualizations for specific columns\n                              </p>\n                              <button \n                                onClick={() => setActiveTab('visualizations')}\n                                className=\"mt-1 text-xs text-green-600 hover:text-green-800\"\n                              >\n                                Go to visualization builder →\n                              </button>\n                            </div>\n                          </li>\n                        </ul>\n                      </div>\n                      \n                      <div className=\"bg-white rounded-lg shadow-sm p-5 border border-gray-100\">\n                        <h3 className=\"text-lg font-medium text-gray-800 mb-3\">Quick Stats</h3>\n                        <div className=\"space-y-3\">\n                          {stats && stats.columns && (\n                            <>\n                              <div>\n                                <h4 className=\"text-sm font-medium text-gray-500 mb-1\">Columns with most missing values</h4>\n                                <div className=\"space-y-1\">\n                                  {stats.columns\n                                    .filter((col: any) => col.missing > 0)\n                                    .sort((a: any, b: any) => b.missing_pct - a.missing_pct)\n                                    .slice(0, 3)\n                                    .map((col: any) => (\n                                      <div key={col.name} className=\"flex justify-between items-center text-sm\">\n                                        <span className=\"text-gray-800\">{col.name}</span>\n                                        <div className=\"flex items-center\">\n                                          <div className=\"w-24 bg-gray-200 rounded-full h-2 mr-2\">\n                                            <div \n                                              className={`h-2 rounded-full ${\n                                                col.missing_pct > 50 ? 'bg-red-500' : \n                                                col.missing_pct > 20 ? 'bg-yellow-500' : 'bg-blue-500'\n                                              }`}\n                                              style={{ width: `${col.missing_pct}%` }}\n                                            ></div>\n                                          </div>\n                                          <span className=\"text-gray-500 text-xs w-10 text-right\">{col.missing_pct.toFixed(1)}%</span>\n                                        </div>\n                                      </div>\n                                    ))\n                                  }\n                                  {stats.columns.filter((col: any) => col.missing > 0).length === 0 && (\n                                    <p className=\"text-sm text-gray-500\">No missing values found</p>\n                                  )}\n                                </div>\n                              </div>\n                              \n                              <div>\n                                <h4 className=\"text-sm font-medium text-gray-500 mb-1\">Columns with highest uniqueness</h4>\n                                <div className=\"space-y-1\">\n                                  {stats.columns\n                                    .sort((a: any, b: any) => \n                                      (b.unique / fileDetails.row_count) - (a.unique / fileDetails.row_count)\n                                    )\n                                    .slice(0, 3)\n                                    .map((col: any) => (\n                                      <div key={col.name} className=\"flex justify-between items-center text-sm\">\n                                        <span className=\"text-gray-800\">{col.name}</span>\n                                        <div className=\"flex items-center\">\n                                          <div className=\"w-24 bg-gray-200 rounded-full h-2 mr-2\">\n                                            <div \n                                              className=\"bg-purple-500 h-2 rounded-full\"\n                                              style={{ width: `${(col.unique / fileDetails.row_count) * 100}%` }}\n                                            ></div>\n                                          </div>\n                                          <span className=\"text-gray-500 text-xs w-10 text-right\">\n                                            {Math.round((col.unique / fileDetails.row_count) * 100)}%\n                                          </span>\n                                        </div>\n                                      </div>\n                                    ))\n                                  }\n                                </div>\n                              </div>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            )}\n            \n            {activeTab === 'data' && (\n              <div className=\"p-6\">\n                <DataPreview />\n              </div>\n            )}\n            \n            {activeTab === 'visualizations' && (\n              <div className=\"p-6\">\n                <ColumnVisualizations />\n              </div>\n            )}\n            \n            {activeTab === 'correlation' && (\n              <div className=\"p-6\">\n                <CorrelationAnalysis />\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;;AAnCA;;;;;;;;;;;;AAqCA,gDAAgD;AAChD,MAAM,OAAO,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;IAAqC,KAAK;;AAE9C,SAAS,cAAc,EAAE,MAAM,EAA8B;IAC1E,kCAAkC;IAClC,MAAM,kBAAkB,qMAAA,CAAA,UAAK,CAAC,GAAG,CAAC;IAClC,MAAM,SAAS,gBAAgB,EAAE;IAEjC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,SAAM,AAAD;IAC5D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA2D;IACpG,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IACpD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IAC9C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IACxC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO,EAAE;IAC1D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAExD,6BAA6B;IAC7B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,CAAC,YAAY;YACf,OAAO,IAAI,CAAC;YACZ;QACF;QAEA,oCAAoC;QACpC,MAAM,QAAQ;YAAC;YAAQ;YAAU;YAAU;YAAU;SAAQ;QAC7D,YAAY,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,MAAM,EAAE;QAE3D,8CAA8C;QAC9C,IAAI,QAAQ;YACV,QAAQ,GAAG,CAAC,CAAC,qDAAqD,EAAE,QAAQ;YAE5E,4DAA4D;YAC5D,IAAI,WAAW,gBAAgB;gBAC7B,QAAQ,GAAG,CAAC,CAAC,gDAAgD,EAAE,eAAe,IAAI,EAAE,QAAQ;gBAC5F,WAAW;YACb,OAAO;gBACL,QAAQ,GAAG,CAAC,CAAC,yBAAyB,EAAE,OAAO,iBAAiB,CAAC;YACnE;QACF,OAAO;YACL,QAAQ,KAAK,CAAC;QAChB;IACF,GAAG;QAAC;QAAQ;QAAQ;QAAY;KAAe;IAE/C,uCAAuC;IACvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS,MAAM,MAAM,GAAG,KAAK,QAAQ;YACvC,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK;YAC3C,IAAI,MAAM;gBACR,eAAe;YACjB;QACF;IACF,GAAG;QAAC;QAAO;KAAO;IAElB,yDAAyD;IACzD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,gBAAgB;YAClB,SAAS;QACX;IACF,GAAG;QAAC;KAAe;IAEnB,MAAM,WAAW,OAAO;QACtB,IAAI;YACF,eAAe;YACf,YAAY;YAEZ,IAAI;gBACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,sHAAA,CAAA,kBAAe,AAAD,EAAE;gBAC7C,MAAM,cAAc,MAAM,CAAA,GAAA,sHAAA,CAAA,eAAY,AAAD,EAAE;gBAEvC,YAAY;gBACZ,SAAS;gBAET,4CAA4C;gBAC5C,sBAAsB,gBAAgB;YACxC,EAAE,OAAO,OAAY;gBACnB,QAAQ,KAAK,CAAC,uBAAuB;gBACrC,MAAM,eAAe,MAAM,WAAW,IACpC;gBACF,YAAY;YACd;QACF,SAAU;YACR,eAAe;QACjB;IACF;IAEA,MAAM,wBAAwB,CAAC,UAAe;QAC5C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,OAAO,EAAE;QAE3C,MAAM,SAAS,EAAE;QAEjB,0BAA0B;QAC1B,MAAM,mBAAmB;YACvB,QAAQ,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAa,IAAI,IAAI;YAChD,QAAQ,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAa,IAAI,WAAW;YACvD,MAAM;YACN,QAAQ;gBACN,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MACxB,IAAI,WAAW,GAAG,KAAK,YACvB,IAAI,WAAW,GAAG,IAAI,YAAY;YAEtC;QACF;QAEA,OAAO,IAAI,CAAC;YACV,IAAI;YACJ,OAAO;YACP,oBAAM,8OAAC,yOAAA,CAAA,wBAAqB;gBAAC,WAAU;;;;;;YACvC,aAAa;YACb,MAAM;gBACJ,MAAM;oBAAC;iBAAiB;gBACxB,QAAQ;oBACN,UAAU;oBACV,QAAQ;oBACR,QAAQ;wBAAE,GAAG;wBAAI,GAAG;wBAAI,GAAG;wBAAI,GAAG;oBAAI;oBACtC,OAAO;wBACL,WAAW,CAAC;wBACZ,OAAO;oBACT;oBACA,OAAO;wBACL,OAAO;wBACP,OAAO;4BAAC;4BAAG;yBAAI;oBACjB;gBACF;YACF;QACF;QAEA,kDAAkD;QAClD,MAAM,mBAAmB,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,MAC7C,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,QAAQ,CAAC,UAChD,KAAK,CAAC,GAAG,IAAI,iCAAiC;QAEhD,IAAI,iBAAiB,MAAM,GAAG,GAAG;YAC/B,MAAM,mBAAmB,iBAAiB,GAAG,CAAC,CAAC,MAAa,CAAC;oBAC3D,MAAM,IAAI,IAAI;oBACd,QAAQ,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,MAAa,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,MAAa,QAAQ,QAAQ,CAAC,MAAM;oBACtG,MAAM;oBACN,WAAW;gBACb,CAAC;YAED,OAAO,IAAI,CAAC;gBACV,IAAI;gBACJ,OAAO;gBACP,oBAAM,8OAAC,uNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;gBAC9B,aAAa;gBACb,MAAM;oBACJ,MAAM;oBACN,QAAQ;wBACN,UAAU;wBACV,QAAQ;wBACR,QAAQ;4BAAE,GAAG;4BAAI,GAAG;4BAAI,GAAG;4BAAI,GAAG;wBAAG;wBACrC,OAAO;4BACL,OAAO;wBACT;oBACF;gBACF;YACF;QACF;QAEA,uCAAuC;QACvC,MAAM,qBAAqB,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,MAC/C,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,IAAI,MAAM,GAAG,IAC3E,KAAK,CAAC,GAAG,IAAI,6CAA6C;QAE5D,IAAI,mBAAmB,MAAM,GAAG,GAAG;YACjC,MAAM,SAAS,kBAAkB,CAAC,EAAE;YAEpC,0BAA0B;YAC1B,MAAM,cAAsC,CAAC;YAC7C,SAAS,OAAO,CAAC,OAAO,CAAC,CAAC;gBACxB,MAAM,MAAM,OAAO,GAAG,CAAC,OAAO,IAAI,CAAC;gBACnC,WAAW,CAAC,IAAI,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,IAAI;YAC/C;YAEA,+BAA+B;YAC/B,MAAM,SAAS,OAAO,IAAI,CAAC;YAC3B,MAAM,SAAS,OAAO,MAAM,CAAC;YAE7B,OAAO,IAAI,CAAC;gBACV,IAAI;gBACJ,OAAO,GAAG,OAAO,IAAI,CAAC,UAAU,CAAC;gBACjC,oBAAM,8OAAC,uNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;gBAC9B,aAAa;gBACb,MAAM;oBACJ,MAAM;wBAAC;4BACL;4BACA;4BACA,MAAM;4BACN,UAAU;4BACV,uBAAuB;wBACzB;qBAAE;oBACF,QAAQ;wBACN,UAAU;wBACV,QAAQ;wBACR,QAAQ;4BAAE,GAAG;4BAAI,GAAG;4BAAI,GAAG;4BAAI,GAAG;wBAAG;wBACrC,YAAY;wBACZ,QAAQ;4BACN,aAAa;4BACb,GAAG,CAAC;wBACN;oBACF;gBACF;YACF;QACF;QAEA,oEAAoE;QACpE,IAAI,iBAAiB,MAAM,GAAG,GAAG;YAC/B,qDAAqD;YACrD,MAAM,aAAyB,EAAE;YACjC,MAAM,aAAa,iBAAiB,GAAG,CAAC,CAAC,MAAa,IAAI,IAAI;YAE9D,mFAAmF;YACnF,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;gBAC1C,UAAU,CAAC,EAAE,GAAG,EAAE;gBAClB,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;oBAC1C,IAAI,MAAM,GAAG;wBACX,UAAU,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,gCAAgC;oBACxD,OAAO;wBACL,mEAAmE;wBACnE,UAAU,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,CAAC,KAAK,MAAM,KAAK,IAAI,CAAC,IAAI,OAAO;oBACjE;gBACF;YACF;YAEA,OAAO,IAAI,CAAC;gBACV,IAAI;gBACJ,OAAO;gBACP,oBAAM,8OAAC,qOAAA,CAAA,sBAAmB;oBAAC,WAAU;;;;;;gBACrC,aAAa;gBACb,MAAM;oBACJ,MAAM;wBAAC;4BACL,GAAG;4BACH,GAAG;4BACH,GAAG;4BACH,MAAM;4BACN,YAAY;4BACZ,MAAM,CAAC;4BACP,MAAM;wBACR;qBAAE;oBACF,QAAQ;wBACN,UAAU;wBACV,QAAQ;wBACR,QAAQ;4BAAE,GAAG;4BAAI,GAAG;4BAAI,GAAG;4BAAI,GAAG;wBAAG;oBACvC;gBACF;YACF;QACF;QAEA,iBAAiB;IACnB;IAEA,MAAM,eAAe;QACnB,aAAa,UAAU,CAAC;QACxB,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,aAAa,CAAC;QAClB,IAAI;YACF,MAAM,OAAO,IAAI,KAAK;YACtB,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;gBACtC,MAAM;gBACN,OAAO;gBACP,KAAK;gBACL,MAAM;gBACN,QAAQ;YACV,GAAG,MAAM,CAAC;QACZ,EAAE,OAAO,GAAG;YACV,OAAO;QACT;IACF;IAEA,MAAM,sBAAsB,CAAC;QAC3B,IAAI,iBAAiB,QAAQ;YAC3B,gBAAgB;QAClB,OAAO;YACL,gBAAgB;QAClB;IACF;IAEA,IAAI,WAAW,CAAC,aAAa;QAC3B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,UAAU;QACZ,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;8BAChB,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,uNAAA,CAAA,eAAY;4CAAC,WAAU;;;;;;sDACxB,8OAAC;4CAAG,WAAU;sDAAuC;;;;;;;;;;;;8CAGvD,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDACC,SAAS,IAAM,cAAc,CAAC;gDAC9B,WAAU;;kEAEV,8OAAC,2NAAA,CAAA,iBAAc;wDAAC,WAAU;;;;;;kEAC1B,8OAAC;wDAAK,WAAU;kEAAiC;;;;;;kEACjD,8OAAC;wDAAI,WAAU;wDAAwB,SAAQ;wDAAY,MAAK;kEAC9D,cAAA,8OAAC;4DAAK,UAAS;4DAAU,GAAE;4DAAqH,UAAS;;;;;;;;;;;;;;;;;4CAI5J,4BACC,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAI,WAAU;oDAAO,MAAK;oDAAO,oBAAiB;oDAAW,mBAAgB;;sEAC5E,8OAAC;4DAAE,MAAK;4DAAI,WAAU;;8EACpB,8OAAC,+MAAA,CAAA,WAAQ;oEAAC,WAAU;;;;;;gEAAiB;;;;;;;sEAGvC,8OAAC;4DACC,SAAS;4DACT,WAAU;;8EAEV,8OAAC,+OAAA,CAAA,2BAAwB;oEAAC,WAAU;;;;;;gEAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAWvE,8OAAC;oBAAK,WAAU;8BACd,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,OAAM;wCAA6B,WAAU;wCAAe,MAAK;wCAAO,SAAQ;wCAAY,QAAO;kDACtG,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;kDAEvE,8OAAC;wCAAG,WAAU;kDAAwB;;;;;;;;;;;;0CAExC,8OAAC;gCAAE,WAAU;0CAAsB;;;;;;0CACnC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS,IAAM,SAAS;wCACxB,WAAU;kDACX;;;;;;kDAGD,8OAAC,4JAAA,CAAA,UAAI;wCACH,MAAK;wCACL,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQb;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,uNAAA,CAAA,eAAY;wCAAC,WAAU;;;;;;kDACxB,8OAAC;wCAAG,WAAU;kDAAuC;;;;;;;;;;;;0CAGvD,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,SAAS,IAAM,cAAc,CAAC;4CAC9B,WAAU;;8DAEV,8OAAC,2NAAA,CAAA,iBAAc;oDAAC,WAAU;;;;;;8DAC1B,8OAAC;oDAAK,WAAU;8DAAiC;;;;;;8DACjD,8OAAC;oDAAI,WAAU;oDAAwB,SAAQ;oDAAY,MAAK;8DAC9D,cAAA,8OAAC;wDAAK,UAAS;wDAAU,GAAE;wDAAqH,UAAS;;;;;;;;;;;;;;;;;wCAI5J,4BACC,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAI,WAAU;gDAAO,MAAK;gDAAO,oBAAiB;gDAAW,mBAAgB;;kEAC5E,8OAAC;wDAAE,MAAK;wDAAI,WAAU;;0EACpB,8OAAC,+MAAA,CAAA,WAAQ;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;kEAGvC,8OAAC;wDACC,SAAS;wDACT,WAAU;;0EAEV,8OAAC,+OAAA,CAAA,2BAAwB;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAYvE,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,4JAAA,CAAA,UAAI;4CACH,MAAK;4CACL,WAAU;;8DAEV,8OAAC,yNAAA,CAAA,gBAAa;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;sDAG5C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,+NAAA,CAAA,mBAAgB;oDAAC,WAAU;;;;;;8DAC5B,8OAAC;oDAAG,WAAU;oDAAyF,OAAO,YAAY,QAAQ;8DAC/H,YAAY,QAAQ;;;;;;;;;;;;;;;;;;8CAI3B,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAO,WAAU;;8DAChB,8OAAC,yOAAA,CAAA,wBAAqB;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;sDAGpD,8OAAC;4CAAO,WAAU;;8DAChB,8OAAC,iNAAA,CAAA,YAAS;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;sDAGxC,8OAAC;4CAAO,WAAU;;8DAChB,8OAAC,iNAAA,CAAA,YAAS;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;;;;;;;;sCAO5C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,yOAAA,CAAA,wBAAqB;gDAAC,WAAU;;;;;;0DACjC,8OAAC;gDAAG,WAAU;0DAAsB;;;;;;;;;;;;;;;;;8CAGxC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAI,WAAU;kEAAoC;;;;;;kEACnD,8OAAC;wDAAI,WAAU;wDAAsC,OAAO,YAAY,QAAQ;kEAC7E,YAAY,QAAQ;;;;;;;;;;;;0DAGzB,8OAAC;;kEACC,8OAAC;wDAAI,WAAU;kEAAoC;;;;;;kEACnD,8OAAC;wDAAI,WAAU;wDAAwD,OAAO,WAAW,YAAY,WAAW;;0EAC9G,8OAAC,iNAAA,CAAA,YAAS;gEAAC,WAAU;;;;;;0EACrB,8OAAC;gEAAK,WAAU;0EAAY,WAAW,YAAY,WAAW;;;;;;;;;;;;;;;;;;0DAGlE,8OAAC;;kEACC,8OAAC;wDAAI,WAAU;kEAAoC;;;;;;kEACnD,8OAAC;wDAAI,WAAU;wDAAsC,OAAO,YAAY,IAAI;kEACzE,YAAY,IAAI;;;;;;;;;;;;0DAGrB,8OAAC;;kEACC,8OAAC;wDAAI,WAAU;kEAAoC;;;;;;kEACnD,8OAAC;wDAAI,WAAU;wDACV,OAAO,GAAG,YAAY,SAAS,CAAC,cAAc,GAAG,QAAQ,EAAE,YAAY,YAAY,CAAC,QAAQ,CAAC;;0EAChG,8OAAC,6NAAA,CAAA,kBAAe;gEAAC,WAAU;;;;;;0EAC3B,8OAAC;gEAAK,WAAU;;oEAAY,YAAY,SAAS,CAAC,cAAc;oEAAG;oEAAS,YAAY,YAAY;oEAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAQ/G,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,WAAW,CAAC,gDAAgD,EAC1D,cAAc,cACV,6CACA,sDACJ;4CACF,SAAS,IAAM,aAAa;;8DAE5B,8OAAC,2NAAA,CAAA,iBAAc;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;sDAG7C,8OAAC;4CACC,WAAW,CAAC,gDAAgD,EAC1D,cAAc,SACV,6CACA,sDACJ;4CACF,SAAS,IAAM,aAAa;;8DAE5B,8OAAC,2NAAA,CAAA,iBAAc;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;sDAG7C,8OAAC;4CACC,WAAW,CAAC,gDAAgD,EAC1D,cAAc,mBACV,6CACA,sDACJ;4CACF,SAAS,IAAM,aAAa;;8DAE5B,8OAAC,uNAAA,CAAA,eAAY;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;sDAG3C,8OAAC;4CACC,WAAW,CAAC,gDAAgD,EAC1D,cAAc,gBACV,6CACA,sDACJ;4CACF,SAAS,IAAM,aAAa;;8DAE5B,8OAAC,qOAAA,CAAA,sBAAmB;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;;gCAKnD,cAAc,6BACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAAyC;;;;;;8DACvD,8OAAC;oDAAE,WAAU;8DAAwB;;;;;;;;;;;;wCAKtC,4BACC,8OAAC;4CAAI,WAAU;sDACZ;gDAAC;gDAAG;gDAAG;gDAAG;6CAAE,CAAC,GAAG,CAAC,CAAC,kBACjB,8OAAC;oDAAY,WAAU;;sEACrB,8OAAC;4DAAI,WAAU;sEACb,cAAA,8OAAC;gEAAI,WAAU;;;;;;;;;;;sEAEjB,8OAAC;4DAAI,WAAU;sEACb,cAAA,8OAAC;gEAAI,WAAU;;;;;;;;;;;;mDALT;;;;;;;;;iEAWd;;8DAEE,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAG,WAAU;8EAAyC;;;;;;8EACvD,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAK,WAAU;sFACb,SAAS,MAAM,OAAO,GACrB,GAAG,CAAC,MAAM,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,KAAa,MAAa,MAAM,IAAI,WAAW,EAAE,KAAK,MAAM,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GACvH;;;;;;sFAEN,8OAAC;4EAAK,WAAU;sFAAkC;;;;;;;;;;;;8EAEpD,8OAAC;oEAAE,WAAU;8EACV,SAAS,MAAM,OAAO,IAAI,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,MAAa,IAAI,OAAO,GAAG,KACxE,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,MAAa,IAAI,OAAO,GAAG,GAAG,MAAM,CAAC,4BAA4B,CAAC,GAC3F;;;;;;;;;;;;sEAKN,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAG,WAAU;8EAA0C;;;;;;8EACxD,8OAAC;oEAAI,WAAU;8EACZ,SAAS,MAAM,OAAO,iBACrB;;0FACE,8OAAC;gFAAI,WAAU;;kGACb,8OAAC;wFAAK,WAAU;;;;;;kGAChB,8OAAC;wFAAK,WAAU;;4FACb,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,MAAa,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,MAAM;4FAAC;;;;;;;;;;;;;0FAGzG,8OAAC;gFAAI,WAAU;;kGACb,8OAAC;wFAAK,WAAU;;;;;;kGAChB,8OAAC;wFAAK,WAAU;;4FACb,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,MAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,MAAM;4FAAC;;;;;;;;;;;;;;uFAI3G;;;;;;8EAEN,8OAAC;oEAAE,WAAU;;wEACV,UAAU,SAAS,UAAU;wEAAE;;;;;;;;;;;;;sEAIpC,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAG,WAAU;8EAA2C;;;;;;8EACzD,8OAAC;oEAAI,WAAU;8EACZ,SAAS,MAAM,OAAO,iBACrB,8OAAC;wEAAI,WAAU;;0FACb,8OAAC;gFAAI,WAAU;;kGACb,8OAAC;wFAAK,WAAU;kGAA0B;;;;;;kGAC1C,8OAAC;wFAAK,WAAU;kGACb,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,KAAa,MAAa,KAAK,GAAG,CAAC,KAAK,IAAI,MAAM,GAAG,GAAG,cAAc;;;;;;;;;;;;0FAGjG,8OAAC;gFAAI,WAAU;;kGACb,8OAAC;wFAAK,WAAU;kGACb,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,MAAW,UAChC,AAAC,KAAK,MAAM,GAAG,QAAQ,MAAM,GAAI,OAAO,SAAS;4FAAE,QAAQ;wFAAE,GAC7D,IAAI;;;;;;kGAER,8OAAC;wFAAK,WAAU;kGAA0B;;;;;;;;;;;;;;;;;+EAG5C;;;;;;;;;;;;;;;;;;8DAMV,8OAAC;oDAAI,WAAU;;wDACZ,cAAc,GAAG,CAAC,CAAC,sBAClB,8OAAC;gEAEC,WAAW,CAAC,iGAAiG,EAC3G,iBAAiB,MAAM,EAAE,GAAG,kBAAkB,IAC9C;;kFAEF,8OAAC;wEAAI,WAAU;;0FACb,8OAAC;gFAAI,WAAU;;oFACZ,MAAM,IAAI;kGACX,8OAAC;wFAAG,WAAU;kGAAkC,MAAM,KAAK;;;;;;kGAC3D,8OAAC;wFAAK,WAAU;kGAA8B,MAAM,WAAW;;;;;;;;;;;;0FAEjE,8OAAC;gFAAI,WAAU;0FACb,cAAA,8OAAC;oFACC,SAAS,IAAM,oBAAoB,MAAM,EAAE;oFAC3C,WAAU;oFACV,OAAO,iBAAiB,MAAM,EAAE,GAAG,aAAa;8FAEhD,cAAA,8OAAC,yOAAA,CAAA,wBAAqB;wFAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;kFAIvC,8OAAC;wEAAI,WAAU;kFACb,cAAA,8OAAC;4EACC,MAAM,MAAM,IAAI,CAAC,IAAI;4EACrB,QAAQ;gFACN,GAAG,MAAM,IAAI,CAAC,MAAM;gFACpB,UAAU;gFACV,QAAQ,iBAAiB,MAAM,EAAE,GAAG,MAAM,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM;gFAClE,QAAQ,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM;gFAChC,eAAe;gFACf,cAAc;gFACd,MAAM;oFACJ,QAAQ;gFACV;4EACF;4EACA,QAAQ;gFACN,YAAY;gFACZ,gBAAgB,iBAAiB,MAAM,EAAE;gFACzC,aAAa;gFACb,wBAAwB;oFAAC;oFAAW;oFAAY;iFAAkB;4EACpE;4EACA,OAAO;gFAAE,OAAO;gFAAQ,QAAQ;4EAAO;;;;;;;;;;;;+DAzCtC,MAAM,EAAE;;;;;sEAgDjB,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAG,WAAU;8EAAyC;;;;;;8EACvD,8OAAC;oEAAG,WAAU;;wEACX,SAAS,MAAM,OAAO,IAAI,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,MAAa,IAAI,WAAW,GAAG,qBAC5E,8OAAC;4EAAG,WAAU;;8FACZ,8OAAC;oFAAI,WAAU;8FACb,cAAA,8OAAC,6OAAA,CAAA,0BAAuB;wFAAC,WAAU;;;;;;;;;;;8FAErC,8OAAC;oFAAI,WAAU;8FACb,cAAA,8OAAC;wFAAE,WAAU;;4FAAwB;4FACC;0GACpC,8OAAC;gGAAK,WAAU;0GAAe,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,MAAa,IAAI,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;wEAMtG,SAAS,MAAM,OAAO,IAAI,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,MAAa,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,MAAM,IAAI,mBAChI,8OAAC;4EAAG,WAAU;;8FACZ,8OAAC;oFAAI,WAAU;8FACb,cAAA,8OAAC,qOAAA,CAAA,sBAAmB;wFAAC,WAAU;;;;;;;;;;;8FAEjC,8OAAC;oFAAI,WAAU;;sGACb,8OAAC;4FAAE,WAAU;sGAAwB;;;;;;sGAGrC,8OAAC;4FACC,SAAS,IAAM,aAAa;4FAC5B,WAAU;sGACX;;;;;;;;;;;;;;;;;;sFAOP,8OAAC;4EAAG,WAAU;;8FACZ,8OAAC;oFAAI,WAAU;8FACb,cAAA,8OAAC,uOAAA,CAAA,uBAAoB;wFAAC,WAAU;;;;;;;;;;;8FAElC,8OAAC;oFAAI,WAAU;;sGACb,8OAAC;4FAAE,WAAU;sGAAwB;;;;;;sGAGrC,8OAAC;4FACC,SAAS,IAAM,aAAa;4FAC5B,WAAU;sGACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sEAQT,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAG,WAAU;8EAAyC;;;;;;8EACvD,8OAAC;oEAAI,WAAU;8EACZ,SAAS,MAAM,OAAO,kBACrB;;0FACE,8OAAC;;kGACC,8OAAC;wFAAG,WAAU;kGAAyC;;;;;;kGACvD,8OAAC;wFAAI,WAAU;;4FACZ,MAAM,OAAO,CACX,MAAM,CAAC,CAAC,MAAa,IAAI,OAAO,GAAG,GACnC,IAAI,CAAC,CAAC,GAAQ,IAAW,EAAE,WAAW,GAAG,EAAE,WAAW,EACtD,KAAK,CAAC,GAAG,GACT,GAAG,CAAC,CAAC,oBACJ,8OAAC;oGAAmB,WAAU;;sHAC5B,8OAAC;4GAAK,WAAU;sHAAiB,IAAI,IAAI;;;;;;sHACzC,8OAAC;4GAAI,WAAU;;8HACb,8OAAC;oHAAI,WAAU;8HACb,cAAA,8OAAC;wHACC,WAAW,CAAC,iBAAiB,EAC3B,IAAI,WAAW,GAAG,KAAK,eACvB,IAAI,WAAW,GAAG,KAAK,kBAAkB,eACzC;wHACF,OAAO;4HAAE,OAAO,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;wHAAC;;;;;;;;;;;8HAG1C,8OAAC;oHAAK,WAAU;;wHAAyC,IAAI,WAAW,CAAC,OAAO,CAAC;wHAAG;;;;;;;;;;;;;;mGAZ9E,IAAI,IAAI;;;;;4FAiBrB,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,MAAa,IAAI,OAAO,GAAG,GAAG,MAAM,KAAK,mBAC9D,8OAAC;gGAAE,WAAU;0GAAwB;;;;;;;;;;;;;;;;;;0FAK3C,8OAAC;;kGACC,8OAAC;wFAAG,WAAU;kGAAyC;;;;;;kGACvD,8OAAC;wFAAI,WAAU;kGACZ,MAAM,OAAO,CACX,IAAI,CAAC,CAAC,GAAQ,IACb,AAAC,EAAE,MAAM,GAAG,YAAY,SAAS,GAAK,EAAE,MAAM,GAAG,YAAY,SAAS,EAEvE,KAAK,CAAC,GAAG,GACT,GAAG,CAAC,CAAC,oBACJ,8OAAC;gGAAmB,WAAU;;kHAC5B,8OAAC;wGAAK,WAAU;kHAAiB,IAAI,IAAI;;;;;;kHACzC,8OAAC;wGAAI,WAAU;;0HACb,8OAAC;gHAAI,WAAU;0HACb,cAAA,8OAAC;oHACC,WAAU;oHACV,OAAO;wHAAE,OAAO,GAAG,AAAC,IAAI,MAAM,GAAG,YAAY,SAAS,GAAI,IAAI,CAAC,CAAC;oHAAC;;;;;;;;;;;0HAGrE,8OAAC;gHAAK,WAAU;;oHACb,KAAK,KAAK,CAAC,AAAC,IAAI,MAAM,GAAG,YAAY,SAAS,GAAI;oHAAK;;;;;;;;;;;;;;+FAVpD,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCA4B3C,cAAc,wBACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,iIAAA,CAAA,UAAW;;;;;;;;;;gCAIf,cAAc,kCACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,0IAAA,CAAA,UAAoB;;;;;;;;;;gCAIxB,cAAc,+BACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,yIAAA,CAAA,UAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpC","debugId":null}}]
}